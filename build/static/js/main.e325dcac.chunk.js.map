{"version":3,"sources":["Components/Navbar.js","Images/icons.js","Components/ListItem.jsx","Components/ItemContent.jsx","Components/FormDialog.jsx","Pages/HomePage.jsx","Pages/OnGroup.jsx","Pages/TempPage.js","Pages/Temp2.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","id","to","Svg","props","xmlns","width","height","viewBox","DeleteIcon","fill","d","ListItem","description","icon","name","className","ItemConent","color","label","side","style","background","FormDialog","useState","open","setOpen","value","setValue","handleClose","Fab","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","headLine","DialogContent","TextField","onChange","e","target","autoFocus","margin","type","fullWidth","DialogActions","Button","getData","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","paper","display","flexDirection","marginBottom","spacing","marginRight","useParams","useEffect","console","log","classes","teams","AddTeam","SetData","triggerComplexItemAction","swipeProgress","handleSwipeProgress","history","useHistory","swipeRightDataComplex","index","content","direction","ItemContent","action","swal","title","text","buttons","dangerMode","then","willDelete","splice","Delete","map","team","key","push","params","threshold","handleClickSL","swipeRight","onSwipeProgress","ListItemAvatar","Badge","badgeContent","Avatar","alt","src","n","groupName","useLocation","state","match","Temp2","PrimeId","exact","path","component","Temp","HomePage","TempPage","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e325dcac.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\n\nconst Navbar = ({ id }) => {\n\n\n    return (\n        <nav>\n            <Link to='/'>ראשי</Link> |\n            <Link to={`/HomePage/${id}`}>הקבוצות שלי</Link> |\n            <Link to={`/TempPage/${id}`}>דף זמני</Link> |\n            <Link to={`/OnGroup/${id}`}>ds</Link>\n        </nav>\n    );\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\n\nconst Svg = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 24 24\"\n    {...props}\n  />\n);\n\nexport const DeleteIcon = () => (\n  <Svg>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n  </Svg>\n);\n\nexport const MailIcon = () => (\n  <Svg>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\n  </Svg>\n);\n\nexport const ReplyIcon = () => (\n  <Svg>\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\" />\n  </Svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport  '../Styles/ListItemStyle.css';\n\nconst ListItem = ({ description, icon, name}) => (\n  <div className=\"listItemComponent\" >\n    <div className=\"label\" >\n      {icon}\n      <span className=\"name\">{name}</span>\n    </div>\n    {description && <div className=\"desciption\">{description}</div>}\n  </div>\n  \n);\n\nListItem.propTypes = {\n  description: PropTypes.string,\n  icon: PropTypes.node,\n  name: PropTypes.string,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/ItemContentStyle.css';\n\nconst ItemConent = ({ icon, color, side, label }) => (\n  <div  \n    style={{ background: color }}\n  >\n    <div className=\"content\">\n      {icon}\n      {label && <span>{label}</span>}\n    </div>\n  </div>\n);\n\nItemConent.propTypes = {\n  icon: PropTypes.node,\n  label: PropTypes.string,\n  side: PropTypes.oneOf(['left', 'right']).isRequired\n};\n\nexport default ItemConent;\n","import React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nexport default function FormDialog(props) {\n\n  const [open, setOpen] = useState(false);\n  const [value ,setValue] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    \n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    \n  };\n  let handleCloseOk = () => {\n    setOpen(false);\n    props.getData(value);\n  }\n\n\n  return (\n    <div>\n      <Fab color=\"primary\" aria-label=\"add\">\n              <AddIcon onClick={handleClickOpen}/>\n          </Fab>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">{props.headLine}</DialogTitle>\n        <DialogContent>\n          <TextField onChange={e => setValue(e.target.value)}\n          \n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label={props.label}\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            בטל\n          </Button>\n          <Button  onClick={handleCloseOk} color=\"primary\">\n           אישור\n          </Button>\n          \n         \n        </DialogActions>\n      </Dialog>\n     \n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { DeleteIcon } from '../Images/icons';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Badge } from '@material-ui/core';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport {\n  SwipeableList,\n  SwipeableListItem\n} from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\nimport swal from 'sweetalert';\nimport { withRouter, useParams, useHistory} from 'react-router-dom';\n\n//Styles\nimport '../Styles/HomeStyle.css';\n\n//Our Components\nimport ListItem from '../Components/ListItem';\nimport ItemContent from '../Components/ItemContent';\nimport FormDialog from '../Components/FormDialog';\n\n\n//Pages\n\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  '& > *': {\n    marginBottom: theme.spacing(2),\n  },\n  '& .MuiBadge-root': {\n    marginRight: theme.spacing(4),\n  }\n\n}));\n\n\n\n\nconst HomePage = () => {\n  let { id } = useParams();\n\n  useEffect(() => {\n    \n    console.log('hey this is your id ' + id);\n  });\n  \n  const classes = useStyles();\n  const [teams, AddTeam] = useState([]);\n  const [, SetData] = useState();\n  const [, triggerComplexItemAction] = useState();\n  const [swipeProgress, handleSwipeProgress] = useState();\n  const history = useHistory();\n\n  const GetTheNewTeam = (n) => {\n    AddTeam([...teams, {\n      name: n\n    }])\n  }\n\n\n\n\n  let Delete = index => {\n    if (swipeProgress === 100) {\n      swal({\n        title: \"מחיקת קבוצה\",\n        text: \"!כל רשימות הקבוצה ימחקו גם הם\",\n        buttons: ['בטל', 'מחק'],\n        dangerMode: true,\n      })\n        .then((willDelete) => {\n          if (willDelete) {\n            teams.splice(index, 1);\n            SetData(...teams);\n            console.log('delete');\n            swal(\"הקבוצה נמחקה \")\n          }\n        });\n    }\n  }\n\n  const swipeRightDataComplex = index => ({\n    content: (\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\n        <ItemContent\n          icon={<DeleteIcon />}\n          label=\"Delete\"\n          side=\"right\"\n\n        />\n      </span>\n\n    ),\n    action: () =>\n      triggerComplexItemAction(Delete(index))\n  });\n\n  const handleClickSL = (name) =>{\n    console.log('clicked ' + name);\n    history.push(`/OnGroup`,{params:name});\n\n    \n     \n    \n    \n  }\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>הקבוצות שלי</h1>\n      </div>\n      <div className=\"Maincontent\"  >\n        \n        {\n          teams.map((team, index) => \n          <span key={index}  onClick={() => handleClickSL(team.name)}>\n            <SwipeableList key={index} className={classes.root} threshold={0.25} handleClickSL  >\n              <SwipeableListItem \n                swipeRight={swipeRightDataComplex(index)}\n                onSwipeProgress={handleSwipeProgress}\n              >\n                <ListItemAvatar style={{ marginRight: '5px' }} >\n                  <Badge badgeContent={10} color=\"secondary\"  >\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                  </Badge>\n                </ListItemAvatar>\n                <ListItem \n                  name={team.name}\n                  description=\"שמות הקבוצה יופיעו פה\"\n                  \n                >\n                  \n                </ListItem>\n              </SwipeableListItem>\n            </SwipeableList>\n            </span>\n          \n          )\n        }\n        \n        \n\n      </div>\n      <div className=\"footer\">\n        <FormDialog getData={GetTheNewTeam} headLine={'יצירת קבוצה'} label={'שם הקבוצה'} />\n      </div>\n     \n\n    </div>\n  );\n\n}\n\nexport default withRouter(HomePage)\n\n","import  React from 'react';\nimport { withRouter, useLocation} from 'react-router-dom';\n\nfunction MyGroup() {\n    const location = useLocation();\n    const groupName = location.state.params\n    return (\n        <div>\n            <h1>הרשימות שלי </h1>\n            <h2>{groupName}</h2>         \n        </div>\n    );\n};\n\nexport default withRouter(MyGroup);","import React, { useEffect } from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\n\n\n\nconst TempPage = ({ match }) => {\n\n    useEffect(() => {\n        console.log();\n    });\n\n    let { id } = useParams();\n\n    return (\n        <div>\n            <h1>temp page</h1>\n            <h1>look at this id</h1>\n            <h2>{id}</h2>\n        </div>\n    );\n}\n\nexport default withRouter(TempPage);","import React from 'react';\n\nconst Temp2 = () => {\n    return (\n        <div>\n            <h1>temp2</h1>\n        </div>\n    );\n}\n\nexport default Temp2;\n","import React from 'react';\nimport { Switch, Route, withRouter, useParams } from 'react-router-dom';\n\n//styles:\nimport './App.css';\n\n//Our Components:\nimport Navbar from './Components/Navbar';\n\n//pages: \nimport HomePage from './Pages/HomePage';\nimport OnGroup from './Pages/OnGroup';\nimport TempPage from './Pages/TempPage';\nimport Temp from './Pages/Temp2';\n\nfunction App() {\n  let { PrimeId } = useParams();\n\n  return (\n    <div className=\"App\">\n      <Navbar id={PrimeId} />\n      <Switch>\n        <Route exact path='/' component={Temp} />\n        <Route exact path='/HomePage/:id' component={HomePage} />\n        <Route exact path=\"/TempPage/:id\" component={TempPage} />\n        {/* <Route path=\"/OnGroup/:id\" component={OnGroup} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}