{"version":3,"sources":["Components/Navbar.js","Images/icons.js","Components/ListItem.jsx","Components/ItemContent.jsx","Components/FormDialog.jsx","Pages/HomePage.jsx","Pages/TempPage.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","to","Svg","props","xmlns","width","height","viewBox","DeleteIcon","fill","d","ListItem","description","icon","name","className","ItemConent","color","label","side","style","background","FormDialog","useState","open","setOpen","value","setValue","handleClose","Fab","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","headLine","DialogContent","TextField","onChange","e","target","autoFocus","margin","type","fullWidth","DialogActions","Button","getData","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","paper","display","flexDirection","marginBottom","spacing","marginRight","useParams","useEffect","console","log","classes","teams","AddTeam","SetData","triggerComplexItemAction","swipeProgress","handleSwipeProgress","swipeRightDataComplex","index","content","direction","ItemContent","action","swal","title","text","buttons","dangerMode","then","willDelete","splice","Delete","map","team","key","threshold","swipeRight","onSwipeProgress","ListItemAvatar","Badge","badgeContent","Avatar","alt","src","n","exact","path","component","HomePage","TempPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.480335e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// let query = useQuery();\r\n\r\n\r\n// function useQuery() {\r\n//     return new URLSearchParams(useLocation().search);\r\n// }\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <Link to='/11'>הקבוצות שלי</Link> |\r\n            <Link to='/TempPage/1'>דף זמני</Link> |\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\n\r\nconst Svg = props => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 24 24\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const MailIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const ReplyIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\" />\r\n  </Svg>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  '../Styles/ListItemStyle.css';\r\n\r\nconst ListItem = ({ description, icon, name }) => (\r\n  <div className=\"listItemComponent\">\r\n    <div className=\"label\">\r\n      {icon}\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n    {description && <div className=\"desciption\">{description}</div>}\r\n  </div>\r\n);\r\n\r\nListItem.propTypes = {\r\n  description: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  name: PropTypes.string\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Styles/ItemContentStyle.css';\r\n\r\nconst ItemConent = ({ icon, color, side, label }) => (\r\n  <div  \r\n    style={{ background: color }}\r\n  >\r\n    <div className=\"content\">\r\n      {icon}\r\n      {label && <span>{label}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItemConent.propTypes = {\r\n  icon: PropTypes.node,\r\n  label: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']).isRequired\r\n};\r\n\r\nexport default ItemConent;\r\n","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [value ,setValue] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    \r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    \r\n  };\r\n  let handleCloseOk = () => {\r\n    setOpen(false);\r\n    props.getData(value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\">\r\n              <AddIcon onClick={handleClickOpen}/>\r\n          </Fab>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n  <DialogTitle id=\"form-dialog-title\">{props.headLine}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField onChange={e => setValue(e.target.value)}\r\n          \r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.label}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            בטל\r\n          </Button>\r\n          <Button  onClick={handleCloseOk} color=\"primary\">\r\n           אישור\r\n          </Button>\r\n          \r\n         \r\n        </DialogActions>\r\n      </Dialog>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Badge } from '@material-ui/core';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\nimport { DeleteIcon } from '../Images/icons';\r\nimport ListItem from '../Components/ListItem';\r\nimport ItemContent from '../Components/ItemContent';\r\nimport swal from 'sweetalert';\r\nimport FormDialog from '../Components/FormDialog';\r\nimport '../Styles/HomeStyle.css';\r\n\r\nimport { withRouter, useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    \r\n    console.log('hey this is your id ' + id);\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  const [teams, AddTeam] = useState([]);\r\n  const [, SetData] = useState();\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n\r\n  const GetTheNewTeam = (n) => {\r\n    AddTeam([...teams, {\r\n      name: n\r\n    }])\r\n  }\r\n\r\n\r\n\r\n\r\n  let Delete = index => {\r\n    if (swipeProgress === 100) {\r\n      swal({\r\n        title: \"מחיקת קבוצה\",\r\n        text: \"!כל רשימות הקבוצה ימחקו גם הם\",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            teams.splice(index, 1);\r\n            SetData(...teams);\r\n            console.log('delete');\r\n            swal(\"הקבוצה נמחקה \")\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  const swipeRightDataComplex = index => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          label=\"Delete\"\r\n          side=\"right\"\r\n\r\n        />\r\n      </span>\r\n\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(index))\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>הקבוצות שלי</h1>\r\n      </div>\r\n      <div className=\"Maincontent\">\r\n        {\r\n          teams.map((team, index) =>\r\n            <SwipeableList key={index} className={classes.root} threshold={0.25} >\r\n              <SwipeableListItem\r\n                swipeRight={swipeRightDataComplex(index)}\r\n                onSwipeProgress={handleSwipeProgress}\r\n              >\r\n                <ListItemAvatar style={{ marginRight: '5px' }}>\r\n                  <Badge badgeContent={10} color=\"secondary\"  >\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                  </Badge>\r\n                </ListItemAvatar>\r\n                <ListItem\r\n                  name={team.name}\r\n                  description=\"שמות הקבוצה יופיעו פה\"\r\n                >\r\n                </ListItem>\r\n\r\n              </SwipeableListItem>\r\n            </SwipeableList>\r\n\r\n          )\r\n        }\r\n\r\n      </div>\r\n      <div className=\"footer\">\r\n        <FormDialog getData={GetTheNewTeam} headLine={'יצירת קבוצה'} label={'שם הקבוצה'} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(HomePage)\r\n\r\n","import React from 'react';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst TempPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <h1>temp page</h1>\r\n            <h1>look at this id</h1>\r\n            <h2>{id}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TempPage);","import React from 'react';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\n\r\n//styles:\r\nimport './App.css';\r\n\r\n//Our Components:\r\nimport Navbar from './Components/Navbar';\r\n\r\n//pages: \r\nimport HomePage from './Pages/HomePage';\r\nimport TempPage from './Pages/TempPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/:id' component={HomePage} />\r\n        <Route path=\"/TempPage/:id\" component={TempPage} />\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}