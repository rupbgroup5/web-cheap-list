{"version":3,"sources":["Components/Navbar.js","Images/icons.js","Components/ListItem.jsx","Components/ItemContent.jsx","Components/FormDialog.jsx","Components/AuthenticateContact.js","Components/Contacts.jsx","Components/SendPush.js","Contexts/GroupDetailsContext.js","Contexts/IsLocalContext.js","Pages/HomePage.jsx","Contexts/ListDetailsContext.js","Pages/AGroup.jsx","Pages/TempPage.js","Contexts/ProductsCartContext.js","Pages/AList.jsx","Pages/SuperMarketList.jsx","Pages/MyCart.js","Components/MainNavBar.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","id","useParams","to","Svg","props","xmlns","width","height","viewBox","DeleteIcon","fill","d","ListItem","description","icon","name","className","ItemConent","color","label","side","style","background","FormDialog","useState","open","setOpen","value","setValue","handleClose","Fab","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","headLine","DialogContent","TextField","onChange","e","target","autoFocus","margin","type","fullWidth","DialogActions","Button","console","log","getData","AuthenticateContact","PhoneNumber","a","apiAppUser","fetch","method","headers","Headers","res","json","member","UserID","newUser","UserName","body","JSON","stringify","then","result","error","Contacts","contacts","SetContacts","fixedOptions","members","SetMembers","useEffect","userID","data","groupName","Autocomplete","multiple","event","newValue","filter","option","indexOf","options","getOptionLabel","Name","renderTags","tagValue","getTagProps","map","index","Chip","disabled","renderInput","params","variant","placeholder","length","close","alert","SendPushAddToGroup","token","AdminName","GroupName","msg","title","badge","response","GroupDetailsContext","createContext","GroupDetailsContextProvider","groupDetails","SetGroupDetails","Provider","children","IsLocalContext","IsLocalContextProvider","isLocal","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","paper","display","flexDirection","marginBottom","spacing","marginRight","useContext","userIDfromRN","classes","groups","SetGroups","triggerComplexItemAction","swipeProgress","handleSwipeProgress","history","useHistory","apiAppGroups","enable","SetEnable","tempGroupName","SetTempGroupName","AddNewGroup","participiants","participiantsArr","i","newParticipiant","push","newGroup","Participiants","ExpoToken","SwipeRightContent","content","direction","ItemContent","action","swal","text","buttons","dangerMode","willDelete","splice","Delete","GetParticipiants","str","g","key","GetIntoGroup","threshold","swipeRight","GroupID","onSwipeProgress","ListItemAvatar","Badge","badgeContent","Avatar","alt","src","arr","textAlign","ListObjContext","ListDetailsContextProvider","listObj","SetListObj","StyledBadge","withStyles","right","top","border","padding","gName","setName","lists","SetLists","textInput","useRef","tempName","apiAppList","swipeRightDataComplex","ListID","onInput","onBlur","userInput","current","inputRef","l","GetIntoList","IconButton","ListName","ListEstimatedPrice","Number","toFixed","n","newList","ProductsCartContext","ProductsCartContextProvider","productCart","SetProductCart","openSpeedDial","setOpenSpeedDial","list","SetList","listName","SetListName","queryString","require","product","SetProduct","stores","SetStores","api","tempProduct","templimit","apiAppProduct","handleClickLimit","LimitPrice","handleClickChoise","CityName","GetCityByName","city_name","query","stringifyUrl","url","resCity","resultCity","GetProductsByName","product_name","resBarcode","resultBarcode","GetStoresByCityID","city_id","resStoreID","resultStoreID","arrayProduct","price","count","j","GetPriceByProductBarCode","store_id","product_barcode","resPrice","resultPrice","error_type","parse","store_product_price","resSRC","resultSRC","p","product_description","product_image","manufacturer_name","estimatedProductPrice","ConfirmationLimit","tempCheck","willContinue","Add2DB","resDB","resultDB","getTotalPrice","tempArrayStore","outOfStock","s","OutOfStock","Store","TotalPrice","SearchSubstitute","indexS","indexO","prodSubstitute","tempArray","barcode","DeleteProduct","store_name","store_address","o","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","actions","SpeedDialAction","tooltipTitle","location","navigator","geolocation","watchPosition","position","coords","latitude","longitude","lat","lng","handleClickAction","TestFunction","GetChains","GetStoresByChain","chain_id","sub_chain_id","limit","GetStoresByGPS","km_radius","order","GetProductsByBarCode","GetProductsByID","product_id","GetPrice","GetPriceByProductID","GetHistoryByProductBarCode","from_date","to_date","GetHistoryByProductID","GetCities","info","Checkbox","goBack","MainNabar","React","anchorEl","setAnchorEl","Boolean","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","ListDetailsContext","exact","path","component","HomePage","TempPage","AGroup","AList","SuperMarketList","MyCart","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b7a031ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, withRouter, useParams } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    return (\r\n        <nav>\r\n            <Link to={`/HomePage/${id}`}>הקבוצות שלי</Link> |\r\n            <Link to={`/SuperMarketList`}>SuperMarketList זמני</Link> |\r\n            <br />\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\n\r\nconst Svg = props => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 24 24\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const MailIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const ReplyIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\" />\r\n  </Svg>\r\n);\r\nexport const SettingIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\r\n  </Svg>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  '../Styles/ListItemStyle.css';\r\n\r\n\r\n  const ListItem = ({ description, icon, name}) => (\r\n\r\n    <div className=\"listItemComponent\" >\r\n    <div className=\"label\" >\r\n      {icon}\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n    {description && <div className=\"desciption\">{description}</div>}\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nListItem.propTypes = {\r\n  description: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ListItem\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Styles/ItemContentStyle.css';\r\n\r\nconst ItemConent = ({ icon, color, side, label }) => (\r\n  <div  \r\n    style={{ background: color }}\r\n  >\r\n    <div className=\"content\">\r\n      {icon}\r\n      {label && <span>{label}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItemConent.propTypes = {\r\n  icon: PropTypes.node,\r\n  label: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']).isRequired\r\n};\r\n\r\nexport default ItemConent;\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//import Contacts from '../Components/Contacts'\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  let handleCloseOk = () => {\r\n    setOpen(false);\r\n    //SetEnable(true)\r\n    //SetGroupName(value)\r\n    console.log('dialog',value);\r\n    \r\n    props.getData(value);\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\">\r\n        <AddIcon onClick={handleClickOpen}/>\r\n      </Fab>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.headLine}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField onChange={e => setValue(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.label}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            בטל\r\n          </Button>\r\n          <Button onClick={handleCloseOk} color=\"primary\">\r\n            אישור\r\n          </Button>\r\n\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n","// import  { useContext } from 'react'\r\n\r\n// //Context Api\r\n// import { IsLocalContext } from \"../Contexts/IsLocalContext\";\r\n\r\n\r\n\r\nconst AuthenticateContact = async (PhoneNumber) => {\r\n    //const  { isLocal } = useContext(IsLocalContext); not working, probably because breaking the Rules of Hooks.\r\n     let apiAppUser = 'http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppUsers/'\r\n    \r\n     if (false) {\r\n      apiAppUser = 'http://localhost:56794/api/AppUsers/'\r\n     }\r\n     \r\n    const res = await fetch(`${apiAppUser}AuthenticateContact/${PhoneNumber}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n    })\r\n    let member = await res.json();\r\n\r\n    if (member.UserID === 0) {\r\n        const newUser = {\r\n            UserName: PhoneNumber,\r\n            PhoneNumber: PhoneNumber //The defulat userName is the PhoneNumber until the user will change his name\r\n        }\r\n        console.log('into if')\r\n        await fetch(`${apiAppUser}SystemPostUser`, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(newUser)\r\n        }).then(res => { return res.json(); })\r\n            .then(\r\n                (result) => {\r\n                    console.log('The ', result, ' was successfully added!')\r\n                    member = result;\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                })\r\n    }\r\n    return member\r\n}\r\n\r\nexport default AuthenticateContact\r\n\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function Contacts(props) {\r\n  const [contacts, SetContacts] = useState([])\r\n  const fixedOptions = [];\r\n  const [members, SetMembers] = useState([...fixedOptions,]);\r\n\r\n\r\n  useEffect(() => {\r\n    (async function fetchMyAPI() {\r\n      const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppUsers/GetUserContacts/${props.userID}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n      })\r\n      let data = await res.json();\r\n      console.log('data', data)\r\n      SetContacts(data)\r\n    }());\r\n\r\n  }, [props.userID])\r\n\r\n  const CloseContacts = () => {\r\n    console.log('value', members)\r\n    if (members.length !== 0) {\r\n      props.close(members)\r\n    }\r\n    else { alert('לא בחרת משתתפים עדיין') }\r\n\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <h5>בחר אנשי קשר לקבוצת {props.groupName}</h5>\r\n      <Autocomplete\r\n        multiple\r\n        id=\"fixed-tags-demo\"\r\n        value={members}\r\n        onChange={(event, newValue) => {\r\n          SetMembers([\r\n            ...fixedOptions,\r\n            ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\r\n          ]);\r\n        }}\r\n        options={contacts}\r\n        getOptionLabel={(option) => option.Name}\r\n        renderTags={(tagValue, getTagProps) =>\r\n          tagValue.map((option, index) => (\r\n            <Chip\r\n              label={option.Name}\r\n              {...getTagProps({ index })}\r\n              disabled={fixedOptions.indexOf(option) !== -1}\r\n            />\r\n          ))\r\n        }\r\n\r\n        style={{ width: 350 }}\r\n        renderInput={(params) => (\r\n          <TextField  {...params} label=\"Contacts\" variant=\"outlined\" placeholder=\"חפש\" />\r\n        )}\r\n      />\r\n      <button onClick={CloseContacts}>הוסף אנשי קשר </button>\r\n    </span>\r\n  );\r\n}\r\n\r\n","\r\n\r\nexport const SendPushAddToGroup = (token, AdminName,GroupName) => {\r\n    console.log('token',token,'Admin',AdminName,'Group',GroupName)\r\n    let msg = {\r\n        to: token,\r\n        title: 'הוספת לקבוצה',\r\n        body: `${AdminName} הוסיף אותך ל${GroupName}`,\r\n        badge: 1,\r\n        data: { name: \"yogev\" }\r\n      }\r\n  \r\n      fetch('http://cors-anywhere.herokuapp.com/https://exp.host/--/api/v2/push/send', {\r\n        method: 'POST',\r\n        body: JSON.stringify(msg),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          if (json != null) {\r\n            console.log(`returned from server\\njson.data= ${JSON.stringify(json.data)}`);\r\n          } else {\r\n            alert('err json');\r\n          }\r\n        });\r\n\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n\r\n\r\nexport const GroupDetailsContext = createContext();\r\n\r\nconst GroupDetailsContextProvider = (props) => {\r\n    const [groupDetails, SetGroupDetails] = useState();\r\n\r\n\r\n    return (\r\n        <GroupDetailsContext.Provider value={{ groupDetails, SetGroupDetails }}>\r\n            {props.children}\r\n        </GroupDetailsContext.Provider>\r\n    );\r\n}\r\nexport default GroupDetailsContextProvider;\r\n\r\n\r\n","import React, { createContext } from 'react';\r\n\r\n\r\nexport const IsLocalContext = createContext();\r\n\r\nconst IsLocalContextProvider = (props) => {\r\n    let isLocal = false;\r\n\r\n\r\n    return (\r\n        <IsLocalContext.Provider value={{ isLocal }}>\r\n            {props.children}\r\n        </IsLocalContext.Provider>\r\n    );\r\n}\r\nexport default IsLocalContextProvider;\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { DeleteIcon } from '../Images/icons'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Avatar, Badge } from '@material-ui/core'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\nimport swal from 'sweetalert'\r\nimport { withRouter, useParams, useHistory } from 'react-router-dom' //,useLocation\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css'\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem'\r\nimport ItemContent from '../Components/ItemContent'\r\nimport FormDialog from '../Components/FormDialog'\r\nimport AuthenticateContact from '../Components/AuthenticateContact'\r\nimport Contacts from '../Components/Contacts'\r\nimport { SendPushAddToGroup } from '../Components/SendPush'\r\n\r\n//Context Api:\r\nimport { GroupDetailsContext } from '../Contexts/GroupDetailsContext'\r\nimport { IsLocalContext } from '../Contexts/IsLocalContext'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\n\r\nfunction HomePage() {\r\n\r\n  //Context Api:\r\n  const { SetGroupDetails } = useContext(GroupDetailsContext);\r\n  const {isLocal} = useContext(IsLocalContext);\r\n\r\n\r\n\r\n  let { userIDfromRN } = useParams();\r\n  //const location = useLocation()\r\n  const classes = useStyles();\r\n  const [groups, SetGroups] = useState([]);\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const history = useHistory();\r\n  //const isLocal = true\r\n  var apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\"\r\n  const [enable, SetEnable] = useState(false);\r\n  const [tempGroupName,SetTempGroupName] = useState();\r\n\r\n  if (isLocal) {\r\n    apiAppGroups = \"http://localhost:56794/api/AppGroups/\"\r\n    userIDfromRN = 12\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    //alert('hello from Rn ' + userIDfromRN);\r\n    //http://proj.ruppin.ac.il/bgroup5/FinalProject/frontEnd\r\n    (async function fetchMyAPI() {\r\n      const res = await fetch(apiAppGroups + userIDfromRN, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n      })\r\n      let data = await res.json();\r\n      console.log('data', data)\r\n      SetGroups(data)\r\n    }());\r\n  }, [userIDfromRN,apiAppGroups]);\r\n\r\n  const AddNewGroup = async (participiants) => {\r\n    let participiantsArr = []\r\n    for (let i = 0; i < participiants.length; i++) {\r\n      let newParticipiant = await AuthenticateContact(participiants[i].PhoneNumber)\r\n      await participiantsArr.push(newParticipiant)\r\n    }\r\n    console.log('participiantsArr', participiantsArr)\r\n\r\n    let newGroup = {\r\n      GroupName: tempGroupName,\r\n      UserID: userIDfromRN,\r\n      Participiants: participiantsArr\r\n    };\r\n    for (let i = 0; i < participiantsArr.length; i++) {\r\n      if (participiantsArr[i].ExpoToken !== null) {\r\n        SendPushAddToGroup(participiantsArr[i].ExpoToken,groups[0].UserName,tempGroupName)\r\n      }\r\n      \r\n    }\r\n  \r\n\r\n    fetch(apiAppGroups, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newGroup)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          SetGroups([...groups, {\r\n            ...result\r\n          }])\r\n          console.log(result)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n\r\n    console.log(groups)\r\n  }\r\n  const Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת קבוצה\",\r\n        text: \"!כל רשימות הקבוצה ימחקו גם הם\",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppGroups + id, {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  groups.splice(index, 1)\r\n                  SetGroups([...groups])\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  swal(\"הקבוצה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const SwipeRightContent = (id, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          label=\"Delete\"\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(id, index))\r\n  });\r\n\r\n  const GetIntoGroup = (index) => {\r\n\r\n    SetGroupDetails(groups[index]);\r\n\r\n\r\n    history.push(`/AGroups`);\r\n\r\n  }\r\n\r\n  const GetParticipiants = (groups) => {\r\n     let str = groups.Participiants[0].UserName;\r\n      for (let i = 1; i < groups.Participiants.length; i++) {\r\n        str += ', ' + groups.Participiants[i].UserName\r\n      }\r\n      return str;\r\n    }\r\n    \r\n    const AddNewMembers = (groupName)=> {\r\n      console.log('groupName',groupName)\r\n       SetTempGroupName(groupName);    \r\n      SetEnable(true)\r\n    }   \r\n\r\n    const handleCloseListContact = (arr) => {\r\n      SetEnable(false);\r\n      AddNewGroup(arr);\r\n      \r\n    }\r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>הקבוצות שלי</h1>\r\n      </div>\r\n      <div className=\"Maincontent\"  >\r\n        {\r\n          groups.map((g, index) =>\r\n            <span key={index} onClick={()=>GetIntoGroup(index)} >\r\n              <SwipeableList className={classes.root} threshold={0.25} >\r\n                <SwipeableListItem\r\n                  swipeRight={SwipeRightContent(g.GroupID, index)}\r\n                  onSwipeProgress={handleSwipeProgress}\r\n                >\r\n                  <ListItemAvatar style={{ marginRight: '5px' }} >\r\n                    <Badge badgeContent={10} color=\"secondary\"  >\r\n                      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </Badge>\r\n                  </ListItemAvatar>\r\n                  <ListItem name={g.GroupName} description={GetParticipiants(g)} />\r\n                </SwipeableListItem>\r\n              </SwipeableList>\r\n\r\n            </span>\r\n          )\r\n        }  \r\n        <br/>\r\n        {enable && <Contacts userID={userIDfromRN} groupName={tempGroupName} close={handleCloseListContact} style={{textAlign:'center'}}/>}\r\n      </div>\r\n      <div className=\"footer\">\r\n        <FormDialog getData={AddNewMembers}  headLine={'יצירת קבוצה'} label={'שם הקבוצה'} />\r\n        {/* userID={userIDfromRN} */}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(HomePage)\r\n\r\n","import React, { createContext, useState } from 'react';\r\n\r\n\r\nexport const ListObjContext = createContext();\r\n\r\nconst ListDetailsContextProvider = (props) => {\r\n    const [listObj, SetListObj] = useState({});\r\n\r\n\r\n    return (\r\n        <ListObjContext.Provider value={{ listObj, SetListObj }}>\r\n            {props.children}\r\n        </ListObjContext.Provider>\r\n    );\r\n}\r\nexport default ListDetailsContextProvider;\r\n\r\n\r\n","\r\n\r\nimport React, { useState, useRef, useEffect, useContext } from 'react'\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\nimport { DeleteIcon } from '../Images/icons'\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { Badge, IconButton, TextField } from '@material-ui/core'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\n\r\n\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\nimport swal from 'sweetalert'\r\n\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css'\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem'\r\nimport ItemContent from '../Components/ItemContent'\r\nimport FormDialog from '../Components/FormDialog'\r\n\r\n\r\n//Context Api:\r\nimport { GroupDetailsContext } from '../Contexts/GroupDetailsContext'\r\nimport { ListObjContext } from \"../Contexts/ListDetailsContext\";\r\nimport { IsLocalContext } from \"../Contexts/IsLocalContext\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n    width: '25ch',\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n\r\n  },\r\n\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\n\r\nfunction AGroup() {\r\n    //Context Api:\r\n  const { groupDetails } = useContext(GroupDetailsContext);\r\n  const { SetListObj } = useContext(ListObjContext);\r\n  const { isLocal } = useContext(IsLocalContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [gName, setName] = useState(groupDetails.GroupName)\r\n  const [lists, SetLists] = useState([]);\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const textInput = useRef(null);\r\n  let tempName = \"\";\r\n  let apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\";\r\n  let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\";\r\n  if (isLocal) {\r\n    apiAppGroups = \"http://localhost:56794/api/AppGroups/\";\r\n    apiAppList = \"http://localhost:56794/api/AppList/\";\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (async function fetchMyAPI() {\r\n      try {\r\n        const res = await fetch(apiAppList + groupDetails.GroupID, {\r\n          method: 'GET',\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          }),\r\n        })\r\n        let data = await res.json();\r\n        SetLists(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    })();\r\n\r\n  }, [groupDetails,apiAppList]);\r\n\r\n  const AddNewList = (n) => {\r\n    let newList = {\r\n      ListName: n,\r\n      GroupID: groupDetails.GroupID,\r\n      UserID: groupDetails.UserID\r\n    }\r\n    fetch(apiAppList, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newList)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          console.log('resultPostList', result)\r\n          SetLists([...lists, {\r\n            ...result\r\n          }])\r\n          console.log(lists)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n  }\r\n  let Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת רשימה\",\r\n        text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppList + id, {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  lists.splice(index, 1)\r\n                  SetLists([...lists])\r\n                  swal(\"הרשימה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  const swipeRightDataComplex = (ListID, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(ListID, index))\r\n  });\r\n\r\n  // let EditDiscription = index => {\r\n  //   if (swipeProgress >= 70) {\r\n  //     swal(\"תיאור הרשימה \", {\r\n  //       content: \"input\",\r\n  //       className: \"swal-input\"\r\n\r\n  //     })\r\n  //       .then((value) => {\r\n  //         list[index].descriptionListList = value;\r\n  //         SetList([...list])\r\n  //         console.log(list)\r\n\r\n  //       });\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const swipeLeftDataComplex = index => ({\r\n  //   content: (\r\n  //     <span style={{ background: '#7cd1f9', width: '100%' }}>\r\n  //       <ItemContent\r\n  //         label=' הוספת תיאור '\r\n  //         side=\"left\"\r\n\r\n  //       />\r\n  //     </span>\r\n\r\n  //   ),\r\n  //   action: () =>\r\n  //     triggerComplexItemAction(EditDiscription(index))\r\n  // });\r\n\r\n\r\n\r\n  const GetIntoList = (index) => {\r\n\r\n  SetListObj(lists[index]);\r\n    history.push('/AList')\r\n\r\n\r\n    //localStorage.setItem('list', JSON.stringify(lists[index]));\r\n\r\n\r\n}\r\n\r\nconst editGroupName = (e) => {\r\n  tempName = \"\";\r\n  tempName = e.target.value\r\n}\r\n\r\nconst Confirmation = () => {\r\n  console.log(tempName)\r\n  if (tempName !== \"\") {\r\n    swal({\r\n      title: \"שינוי שם קבוצה\",\r\n      buttons: ['התחרטתי', 'שנה את השם'],\r\n      dangerMode: true,\r\n    })\r\n      .then((userInput) => {\r\n        if (userInput) {\r\n          console.log(tempName)\r\n          let g = {\r\n            GroupID: groupDetails.GroupID,\r\n            GroupName: tempName\r\n          }\r\n          fetch(apiAppGroups, {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n              'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(g)\r\n          }).then(res => { return res.json(); })\r\n            .then(\r\n              (result) => {\r\n                setName(tempName)\r\n                console.log('The name of ', result, ' id was changed')\r\n                swal('שם הקבוצה שונה');\r\n              },\r\n              (error) => {\r\n                console.log(error)\r\n              })\r\n\r\n        } else {\r\n          textInput.current.value = \"\"\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nreturn (\r\n  <div className=\"container\">\r\n    <div className=\"header\"  >\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        variant=\"outlined\"\r\n        onInput={editGroupName}\r\n        placeholder={gName}\r\n        onBlur={Confirmation}\r\n        inputRef={textInput}\r\n      />\r\n    </div>\r\n    <div className=\"Maincontent\"   >\r\n      {\r\n        lists.map((l, index) =>\r\n          <span key={index} onClick={()=> GetIntoList(index)}>\r\n            <SwipeableList key={index} className={classes.root} threshold={0.25}>\r\n              <SwipeableListItem\r\n                swipeRight={swipeRightDataComplex(l.ListID, index)}\r\n                onSwipeProgress={handleSwipeProgress}>\r\n                <IconButton aria-label=\"cart\">\r\n                  <StyledBadge badgeContent={4} color=\"secondary\">\r\n                    <ShoppingCartIcon />\r\n                  </StyledBadge>\r\n                </IconButton>\r\n                <ListItem name={l.ListName} description={`סך עלות משוערת: ${l.ListEstimatedPrice === 0.00 ? 0 : Number(l.ListEstimatedPrice).toFixed(2)}`} />\r\n              </SwipeableListItem>\r\n            </SwipeableList>\r\n          </span>\r\n        )\r\n      }\r\n    </div>\r\n    <div className=\"footer\">\r\n      <FormDialog getData={AddNewList} headLine={'יצירת רשימה'} label={'שם הרשימה'} />\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\n\r\n\r\n\r\nexport default withRouter(AGroup);","import React from 'react';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst TempPage = () => {\r\n\r\n\r\n    let { id, name } = useParams();\r\n    //  const list = localStorage.getItem('list')\r\n\r\n    const TestTheFetch = () => {\r\n        alert('lets go')\r\n        let localUrl = 'http://localhost:56794/api/AppUsers/updateUserContacts';\r\n        let newUser = {\r\n             UserID: 1,\r\n            Contacts: [{ Name: `ג'לאל ה.עו\"ד gam engli`, PhoneNumber: '972526485161123' }, { Name: 'הלוואי בריבוע', PhoneNumber: '+972-50555-4422' }]\r\n\r\n        }\r\n        fetch(localUrl, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(newUser)\r\n        }).then(res => { return res.json(); })\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n    }\r\n\r\n\r\n    // let borla = () => {\r\n    //     console.log(JSON.parse(list));\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h1>temp page</h1>\r\n            <h1>look at this id</h1>\r\n            <h2>{id}, {name}</h2>\r\n            <button onClick={TestTheFetch}>test the localStorage</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default withRouter(TempPage);","import React, { createContext, useState } from 'react';\r\nimport '../Styles/SuperMarketListStyle.css'\r\n\r\nexport const ProductsCartContext = createContext();\r\n\r\nconst ProductsCartContextProvider = (props) => {\r\n    const [productCart, SetProductCart] = useState([]);\r\n\r\n    return (\r\n        <ProductsCartContext.Provider value={{ productCart, SetProductCart }}>\r\n            {props.children}\r\n        </ProductsCartContext.Provider>\r\n    );\r\n}\r\nexport default ProductsCartContextProvider;\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TextField } from '@material-ui/core'\r\n\r\n//SpedDial\r\nimport {SpeedDial,SpeedDialIcon,SpeedDialAction} from '@material-ui/lab/';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\r\nimport AddAlarmOutlinedIcon from '@material-ui/icons/AddAlarmOutlined';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n//Styles\r\nimport '../Styles/ProductCartStyle.css'\r\n\r\n//Context Api:\r\nimport { ListObjContext } from \"../Contexts/ListDetailsContext\";\r\nimport { IsLocalContext } from \"../Contexts/IsLocalContext\";\r\nimport { ProductsCartContext } from \"../Contexts/ProductsCartContext\";\r\n\r\nimport FormDialog from '../Components/FormDialog'\r\n\r\n\r\nfunction AList() {\r\n\r\n    //Context API\r\n    const { listObj } = useContext(ListObjContext);\r\n    const { isLocal } = useContext(IsLocalContext);\r\n    const { productCart, SetProductCart } = useContext(ProductsCartContext);\r\n\r\n    //SpeedDial\r\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\r\n\r\n    const [list, SetList] = useState(listObj);//JSON.parse(localStorage.getItem(\"list\"))\r\n    const [listName, SetListName] = useState(list.ListName)\r\n    const textInput = useRef(null)\r\n    const queryString = require('query-string');\r\n    const [product, SetProduct] = useState([]);\r\n    //const [productCart, SetProductCart] = useState([]); //Convert to Context\r\n    const [stores, SetStores] = useState([]);\r\n    let api = \"https://api.superget.co.il?api_key=847da8607b5187d8ad1ea24fde8ee8016b19a6db&\"\r\n    let tempProduct = \"\";\r\n    let tempName = \"\";\r\n    let tempCity = \"\";\r\n    let templimit = 0;\r\n    //let isLocal = true\r\n    let apiAppProduct = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppProduct/\"\r\n    let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\"\r\n    if (isLocal) {\r\n        apiAppProduct = \"http://localhost:56794/api/AppProduct/\"\r\n        apiAppList = \"http://localhost:56794/api/AppList/\"\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const res = await fetch(apiAppProduct + listObj.ListID, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                    }),\r\n                })\r\n                let result = await res.json();\r\n                SetProductCart(result)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        )();\r\n    }, [listObj, apiAppProduct, SetProductCart]);\r\n\r\n    const editListName = (e) => {\r\n        tempName = \"\";\r\n        tempName = e.target.value\r\n    }\r\n\r\n    const Confirmation = () => {\r\n        console.log('is ', tempName)\r\n        if (tempName !== \"\") {\r\n            swal({\r\n                title: \"שינוי שם הרשימה\",\r\n                buttons: ['התחרטתי', 'שנה את השם'],\r\n                dangerMode: true,\r\n            })\r\n                .then((userInput) => {\r\n                    if (userInput) {\r\n                        console.log(tempName)\r\n                        let l = {\r\n                            ListID: list.ListID,\r\n                            ListName: tempName\r\n                        }\r\n                        fetch(apiAppList, {\r\n                            method: 'PUT',\r\n                            headers: new Headers({\r\n                                'Content-type': 'application/json; charset=UTF-8'\r\n                            }),\r\n                            body: JSON.stringify(l)\r\n                        }).then(res => { return res.json(); })\r\n                            .then(\r\n                                (result) => {\r\n                                    SetListName(tempName)\r\n                                    list.ListName = listName\r\n                                    console.log('The name of ', result, ' id was changed')\r\n                                    swal('שם הקבוצה שונה');\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error)\r\n                                })\r\n                    } else {\r\n                        textInput.current.value = \"\"\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCity = (e) => { tempCity = e.target.value }\r\n\r\n    const handleClickAction =  (action) => {\r\n        let location = {}\r\n        \r\n        if (action === 'Location') {\r\n            console.log(action)\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.watchPosition(function(position) {\r\n                  console.log(\"Latitude is :\", position.coords.latitude);\r\n                  console.log(\"Longitude is :\", position.coords.longitude);\r\n                  location ={\r\n                      lat: position.coords.latitude,\r\n                      lng: position.coords.longitude\r\n                  }\r\n                 alert(location.lat + ' ' +  location.lng)\r\n                });\r\n              }else{\r\n                  alert('not working')\r\n              }\r\n              \r\n        }\r\n        \r\n        // try {\r\n        //     const res = await fetch(apiAppList + tempCity + '/' + list.ListID, {\r\n        //         method: 'PUT',\r\n        //     })\r\n        //     let result = await res.json();\r\n        //     list.CityName = result.CityName\r\n        // } catch (error) {\r\n        //     console.log(error)\r\n        // }\r\n    }\r\n\r\n    const handleLimit = (e) => { templimit = e.target.value }\r\n\r\n    const handleClickLimit = async () => {\r\n        try {\r\n            const res = await fetch(apiAppList + \"limit/\" + templimit + '/' + list.ListID, {\r\n                method: 'PUT',\r\n            })\r\n            let result = await res.json();\r\n            list.LimitPrice = result.LimitPrice\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleProduct = (e) => { tempProduct = e.target.value }\r\n\r\n    const handleClickChoise = async () => {\r\n        if (list.CityName !== null && tempProduct !== '') {\r\n            try {\r\n                //get cityID\r\n                data.GetCityByName.city_name = list.CityName\r\n                let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n                let resCity = await fetch(query, { method: 'GET' })\r\n                let resultCity = await resCity.json();\r\n                console.log('resultCity', resultCity)\r\n                //get productBarcode\r\n                data.GetProductsByName.product_name = tempProduct;\r\n                query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n                let resBarcode = await fetch(query, { method: 'GET' })\r\n                let resultBarcode = await resBarcode.json();\r\n                console.log('product', resultBarcode)\r\n                //getStoreByCityID\r\n                data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n                query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n                let resStoreID = await fetch(query, { method: 'GET' })\r\n                let resultStoreID = await resStoreID.json()\r\n                let arrayProduct = []\r\n                for (let i = 0; i < resultBarcode.length; i++) {\r\n                    let price = 0;\r\n                    let count = 0;\r\n                    for (let j = 0; j < resultStoreID.length; j++) {\r\n                        data.GetPriceByProductBarCode.store_id = resultStoreID[j].store_id\r\n                        data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n                        query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n                        let resPrice = await fetch(query, { method: 'GET' })\r\n                        let resultPrice = await resPrice.json();\r\n                        if (resultPrice.error_type === \"NO_DATA\") {\r\n                            console.log('err')\r\n                            continue;\r\n                        }\r\n                        price += JSON.parse(resultPrice[0].store_product_price)\r\n                        count++\r\n                    }\r\n                    price = price / count\r\n\r\n                    console.log('my price', price)\r\n                    //Get SRCIMG\r\n                    let resSRC = await fetch(\"http://localhost:56794/api/Scraper/\" + resultBarcode[i].product_name, { method: 'GET' })\r\n                    let resultSRC = await resSRC.json();\r\n                    let p = {\r\n                        product_barcode: resultBarcode[i].product_barcode,\r\n                        product_name: resultBarcode[i].product_name,\r\n                        product_description: resultBarcode[i].product_description,\r\n                        product_image: resultSRC,\r\n                        manufacturer_name: resultBarcode[i].manufacturer_name,\r\n                        estimatedProductPrice: Number(price.toFixed(2))\r\n                    }\r\n                    arrayProduct.push(p)\r\n                }\r\n                SetProduct(...product, arrayProduct)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else alert('מלא את השדות תחילה')\r\n\r\n\r\n    }\r\n\r\n    const ConfirmationLimit = (index) => {\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        let tempCheck = list.ListEstimatedPrice + product[index].estimatedProductPrice\r\n        console.log('temp', tempCheck)\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        if (tempCheck > list.LimitPrice) {\r\n            swal({\r\n                text: \"שים לב! חרגת מהמגבלה\",\r\n                buttons: ['בטל', 'המשך בכל זאת'],\r\n                dangerMode: true,\r\n            }).then((willContinue) => {\r\n                if (willContinue) {\r\n                    Add2DB(index)\r\n                }\r\n            })\r\n        } else if (tempCheck > list.LimitPrice * 0.7) {\r\n            alert('שים לב! עברת 70% מהמגבלה')\r\n            Add2DB(index)\r\n        }\r\n        else Add2DB(index)\r\n    }\r\n\r\n    const Add2DB = async (index) => {\r\n\r\n        let p = {\r\n            ...product[index],\r\n            ListID: list.ListID,\r\n            GroupID: list.GroupID\r\n        }\r\n        const resDB = await fetch(apiAppProduct, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(p)\r\n        })\r\n        const resultDB = await resDB.json()\r\n        console.log('result', resultDB)\r\n        list.ListEstimatedPrice += resultDB.estimatedProductPrice\r\n        SetList(list)\r\n        SetProduct([])\r\n        SetProductCart([...productCart, resultDB])\r\n        alert('המוצר התווסף בהצלחה')\r\n    }\r\n\r\n    const getTotalPrice = async () => {\r\n        try {\r\n            //getCityID\r\n            data.GetCityByName.city_name = list.CityName\r\n            console.log(list.CityName);\r\n\r\n            let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n            console.log('0')\r\n            let resCity = await fetch(query, { method: 'GET' })\r\n            let resultCity = await resCity.json();\r\n            console.log('1')\r\n            //getStorebycityId\r\n            data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n            let resStoreID = await fetch(query, { method: 'GET' })\r\n            let resultStoreID = await resStoreID.json();\r\n            console.log('2')\r\n            let tempArrayStore = []\r\n\r\n            for (let i = 0; i < resultStoreID.length; i++) {\r\n                let p = 0;\r\n                let outOfStock = [];\r\n                for (let j = 0; j < productCart.length; j++) {\r\n                    data.GetPriceByProductBarCode.product_barcode = productCart[j].product_barcode\r\n                    data.GetPriceByProductBarCode.store_id = resultStoreID[i].store_id\r\n                    query = queryString.stringifyUrl({ url: \"https://cors-anywhere.herokuapp.com/\" + api, query: data.GetPriceByProductBarCode })\r\n                    const res = await fetch(query, { method: 'GET' })\r\n                    var result = await res.json()\r\n                    console.log('3')\r\n                    if (result.error_type === \"NO_DATA\") {\r\n                        alert('המוצר ' + productCart[j].product_name + ' לא קיים בחנות זו ')\r\n                        outOfStock.push(productCart[j])\r\n                        continue;\r\n\r\n                    }\r\n                    p += JSON.parse(result[0].store_product_price)\r\n                }\r\n                const s = {\r\n                    OutOfStock: outOfStock,\r\n                    Store: resultStoreID[i],\r\n                    TotalPrice: Number(p.toFixed(2))\r\n                }\r\n                tempArrayStore.push(s)\r\n            }\r\n            SetStores(tempArrayStore)\r\n            console.log('store', stores)\r\n            // history.push(`/ListSuperMarket`, { params:tempArrayStore })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const SearchSubstitute = async (indexS, indexO) => {\r\n        console.log(stores[indexS].OutOfStock[indexO])\r\n        let prodSubstitute = stores[indexS].OutOfStock[indexO];\r\n        data.GetProductsByName.product_name = prodSubstitute.product_description\r\n        let query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n        let resBarcode = await fetch(query, { method: 'GET' })\r\n        let resultBarcode = await resBarcode.json();\r\n        let tempArray = []\r\n        for (let i = 0; i < resultBarcode.length; i++) {\r\n            data.GetPriceByProductBarCode.store_id = stores[indexS].store_id\r\n            data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n            let resPrice = await fetch(query, { method: 'GET' })\r\n            let resultPrice = await resPrice.json();\r\n            console.log('a', resultPrice)\r\n            if (resultPrice.product_barcode === prodSubstitute.product_barcode) {\r\n                continue;\r\n            }\r\n            tempArray.push(resultPrice)\r\n        }\r\n        console.log(tempArray)\r\n        if (tempArray.length !== 0) {\r\n            SetProduct(tempArray)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const DeleteProduct = (index, barcode, ListID) => {\r\n        console.log(productCart[index])\r\n        swal({\r\n            title: \"מחיקת פריט\",\r\n            text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n            buttons: ['בטל', 'מחק'],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    fetch(apiAppProduct + barcode + '/' + ListID, {\r\n                        method: 'DELETE',\r\n                        headers: new Headers({\r\n                            'Content-type': 'application/json; charset=UTF-8'\r\n                        })\r\n                    }).then(res => { return res.json(); })\r\n                        .then(\r\n                            (result) => {\r\n                                console.log('The ', result, ' was successfully deleted!')\r\n                                list.ListEstimatedPrice -= productCart[index].estimatedProductPrice.toFixed(2)\r\n                                productCart.splice(index, 1)\r\n                                SetProductCart([...productCart])\r\n                                swal(\"המוצר נמחק \")\r\n                            },\r\n                            (error) => {\r\n                                console.log(error)\r\n                            })\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    const handleClose = () => { setOpenSpeedDial(false); }\r\n\r\n    const handleOpen = () => { setOpenSpeedDial(true); }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    onInput={editListName}\r\n                    placeholder={listName}\r\n                    onBlur={Confirmation}\r\n                    inputRef={textInput}\r\n                />\r\n            </div>\r\n            <div className=\"Maincontent\">\r\n                <h3>{list.CityName} </h3>\r\n                {/* <input type={'text'} placeholder='הזן עיר חדשה' onChange={handleCity} /> &nbsp; */}\r\n                {/* <button onClick={handleClickCity}>הגדר עיר לחיפוש </button> */}\r\n                <h3>{list.LimitPrice}</h3>\r\n                <input type={'number'} placeholder='הזן מגבלה חדשה' onChange={handleLimit}></input> &nbsp;\r\n                <button onClick={handleClickLimit}>הגדר מגבלה </button> <br /> <br /> <br /> <br />\r\n                <input type={'text'} placeholder='בחר מוצר ' onChange={handleProduct} /> &nbsp;\r\n                <button onClick={handleClickChoise}>חפש מוצר</button>\r\n                <br />\r\n                <h2>מוצרים</h2>\r\n                {product.map((p, index) =>\r\n                    <div key={index}>\r\n                        <p>\r\n                            {p.product_name} <b> במחיר</b> {p.estimatedProductPrice} &nbsp;\r\n                            <img src={p.product_image} alt=\"\" />\r\n                            <button onClick={ConfirmationLimit(index)}>הוסף לרשימה</button>\r\n                        </p>\r\n                    </div>\r\n                )}\r\n                <div id=\"compareList\">\r\n                    {productCart.map((p, index) =>\r\n                        <div key={index} className=\"product\">\r\n                            <img src={p.product_image} alt=\" \" />\r\n                            <br />\r\n                            {p.product_description} <br /> במחיר {p.estimatedProductPrice}\r\n                            <br />\r\n                            <button onClick={() => DeleteProduct(index, p.product_barcode, p.ListID)}>מחק מהרשימה</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <br /><br />\r\n                {productCart.length - 1 !== 0 ? 'מחיר משוער ' + Number(list.ListEstimatedPrice).toFixed(2) : false}\r\n                <br /> <br />\r\n                <button onClick={getTotalPrice}>חפש סופרים בסביבתך</button> <br /><br />\r\n                <b><u>רשימת הסופרים</u></b>\r\n                {stores.map((s, indexS) =>\r\n                    <div key={indexS}>\r\n                        <div>\r\n                            <b>{s.Store.store_name}</b> ברחוב {s.Store.store_address} <b>:עלות סל הקניות הוא </b> {s.TotalPrice} <br />\r\n                            <u><small>המוצרים שחסרים הם</small></u>\r\n                            {s.OutOfStock.map((o, indexO) =>\r\n                                <p key={indexO}>\r\n                                    <span>{o.product_name},</span>\r\n                                    <button onClick={() => SearchSubstitute(indexS, indexO)} >חפש מוצר תחליפי</button>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"footer\" >\r\n                <SpeedDial \r\n                    ariaLabel=\"SpeedDial\"\r\n                    icon={<SpeedDialIcon style={{ height: \"1.4em\" }} />}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    open={openSpeedDial}\r\n                    direction=\"up\"\r\n                >\r\n                    {actions.map((action) => (\r\n                        <SpeedDialAction \r\n                            key={action.name}\r\n                            icon={action.icon}\r\n                            tooltipTitle={action.name}\r\n                            onClick = {()=>handleClickAction(action.name)}\r\n                        />\r\n                    ))}\r\n                </SpeedDial>\r\n            </div>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default withRouter(AList)\r\n\r\nconst data = {\r\n    TestFunction: {\r\n        action: \"TestFunction\"\r\n    },\r\n    GetChains: {\r\n        action: \"GetChains\"\r\n    },\r\n    GetStoresByChain: {\r\n        action: \"GetStoresByChain\", chain_id: '', sub_chain_id: '', limit: 10\r\n    },\r\n    GetStoresByCityID: {\r\n        action: \"GetStoresByCityID\", city_id: '', limit: 3\r\n    },\r\n    GetStoresByGPS: {\r\n        action: \"GetStoresByGPS\", chain_id: '', sub_chain_id: '', latitude: '', longitude: '', km_radius: '', order: '', limit: 10\r\n    },\r\n    GetProductsByBarCode: {\r\n        action: \"GetProductsByBarCode\", product_barcode: '', limit: 3\r\n    },\r\n    GetProductsByID: {\r\n        action: 'GetProductsByID', product_id: '', limit: 10\r\n    },\r\n    GetProductsByName: {\r\n        action: \"GetProductsByName\", product_name: \"\", limit: 5\r\n    },\r\n    GetPrice: {\r\n        action: \"GetPrice\", store_id: '', limit: 10\r\n    },\r\n    GetPriceByProductBarCode: {\r\n        action: \"GetPriceByProductBarCode\", store_id: '', product_barcode: ''\r\n    },\r\n    GetPriceByProductID: {\r\n        action: \"GetPriceByProductID\", store_id: '', product_id: ''\r\n    },\r\n    GetHistoryByProductBarCode: {\r\n        action: \"GetHistoryByProductBarCode\", store_id: '', product_barcode: '', from_date: '', to_date: ''\r\n    },\r\n    GetHistoryByProductID: {\r\n        action: \"GetHistoryByProductID\", store_id: '', product_id: '', from_date: '', to_date: ''\r\n    },\r\n    GetCities: {\r\n        action: \"GetCities\", limit: 10\r\n    },\r\n    GetCityByName: {\r\n        action: \"GetCityByName\", city_name: '', limit: 1\r\n    }\r\n}\r\n\r\nconst actions = [\r\n    { icon: <LocationOnOutlinedIcon/>, name:\"Location\" },\r\n    { icon: <AddShoppingCartOutlinedIcon/>, name:\"AddProduct\"},\r\n    { icon: <AddAlarmOutlinedIcon />, name:\"SetDeadLine\"},\r\n    { icon: <SearchOutlinedIcon/>, name:\"Search\"}\r\n];\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react' //, { useContext }\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n//swipeable list:\r\nimport {\r\nSwipeableList,\r\nSwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\n\r\n\r\n//Context Api:\r\n//import { ProductsCartContext } from \"../Contexts/ProductsCartContext\"\r\n\r\nconst SuperMarketList = () => {\r\n  const history = useHistory();\r\n\r\n//const { productCart } = useContext(ProductsCartContext); //SetProductCart\r\n//temp:\r\n\r\nconst [productCart, SetProductCart] = useState([\r\n\"לחם\",\r\n\"חלב\",\r\n\"חומוס\",\r\n\" גבינה לבנה 5%\",\r\n\"ביצים\",\r\n\"שמן זית\",\r\n\"זיתים\",\r\n\"מרגרינה\",\r\n\"גבינה צהובה\",\r\n\"גיל\",\r\n\"יוגורט\",\r\n\"שוקלד\",\r\n\"אפרסקים\",\r\n\"תפוחים\",\r\n\"אבטיח\",\r\n\"קבבים\",\r\n\"אנטריקוט\",\r\n\"חזה עוף\",\r\n\"ירקות סנפרוסט לתנור\",\r\n\"תבלינים\",\r\n]);\r\n\r\nconst Go2MyCart = () =>{\r\n  history.push(\"/MyCart\")\r\n}\r\n\r\n\r\nreturn (\r\n<div>\r\n    <h3 id=\"productCart-headline\">הרשימה שלי</h3>\r\n  <div id=\"productCart-list\">\r\n    <SwipeableList>\r\n      {productCart.map((product, index)=>{\r\n      return(\r\n      <SwipeableListItem key={index} swipeRight={{\r\n              content: <div className=\"swipe-divs\">\r\n                לא לקחתי\r\n              </div>,\r\n              action: () => console.info('swipe action triggered')\r\n            }}>\r\n              <Checkbox\r\n              color=\"primary\"\r\n              />\r\n        <div>{product}</div>\r\n      </SwipeableListItem>\r\n      )\r\n      })}\r\n    </SwipeableList>\r\n  </div>\r\n<div id=\"buttons-container\"> \r\n\r\n    <Badge badgeContent={2} color=\"error\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={Go2MyCart}>העגלה שלי</Button>\r\n    </Badge>\r\n    <Badge badgeContent={4} color=\"error\">\r\n      <Button variant=\"contained\" color=\"primary\">לא לקחתי</Button>\r\n    </Badge>\r\n\r\n</div> \r\n</div>\r\n\r\n)\r\n}\r\n\r\nexport default withRouter(SuperMarketList);","import React, { useState } from 'react' //, { useContext }\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n//swipeable list:\r\nimport {\r\n    SwipeableList,\r\n    SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\n\r\n\r\n\r\n\r\n\r\nconst MyCart = () => {\r\n    const history = useHistory();\r\n    //const { productCart } = useContext(ProductsCartContext); //SetProductCart\r\n    const inCart = [\r\n        \"לחם\",\r\n        \"חלב\",\r\n        \"חומוס\",\r\n        \" גבינה לבנה 5%\",\r\n        \"ביצים\",\r\n        \"שמן זית\",\r\n        \"זיתים\",\r\n        \"מרגרינה\",\r\n\r\n    ];\r\n\r\n    const back2GroceriesList = () => {\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 id=\"productCart-headline\">העגלה שלי</h3>\r\n            <div id=\"productCart-list\">\r\n                <SwipeableList>\r\n                    {inCart.map((product, index) => {\r\n                        return (\r\n                            <SwipeableListItem key={index} swipeRight={{\r\n                                content: <div className=\"swipe-divs\">\r\n                                    להחזיר לרשימת קניות\r\n              </div>,\r\n                                action: () => console.info('swipe action triggered')\r\n                            }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n\r\n                                />\r\n                                <div>{product}</div>\r\n                            </SwipeableListItem>\r\n                        )\r\n                    })}\r\n                </SwipeableList>\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={back2GroceriesList}>חזרה לרשימה שלי</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(MyCart);","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport '../Styles/NavBarStyle.css'\r\n\r\nexport default function MainNabar() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n      const handleMenu = (event) => {\r\n          console.log(event.currentTarget)\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <div className=\"nav-Logo\">\r\n                <IconButton>\r\n                {/* <img src={logo} alt =\" \"/> */}\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"nav-Profile\">\r\n                <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                 color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>פרופיל</MenuItem>\r\n                <MenuItem onClick={handleClose}>הגדרות</MenuItem>\r\n              </Menu>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n}","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\n\r\n//styles:\r\nimport './App.css'\r\n\r\n//Our Components:\r\nimport Navbar from './Components/Navbar'\r\n\r\n//pages: \r\nimport HomePage from './Pages/HomePage'\r\nimport AGroup from './Pages/AGroup'\r\nimport TempPage from './Pages/TempPage'\r\nimport AList from './Pages/AList'\r\nimport SuperMarketList from './Pages/SuperMarketList'\r\nimport MyCart from './Pages/MyCart'\r\n\r\n\r\n//Contexts Providers:\r\nimport GroupDetailsContextProvider from './Contexts/GroupDetailsContext'\r\nimport ListDetailsContextProvider from './Contexts/ListDetailsContext'\r\nimport IsLocalContextProvider from './Contexts/IsLocalContext'\r\nimport ProductsCartContextProvider from './Contexts/ProductsCartContext'\r\nimport MainNabar from './Components/MainNavBar'\r\nimport GoogleMaps from './Components/GoogleMaps'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <IsLocalContextProvider>\r\n        <GroupDetailsContextProvider>\r\n          <ListDetailsContextProvider>\r\n            <ProductsCartContextProvider>\r\n              <MainNabar/>\r\n              <Navbar />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={HomePage} /> {/**makes the HomePage homepage even when the url clean */}\r\n                <Route path=\"/HomePage/:userIDfromRN\" component={HomePage} />\r\n                <Route path=\"/TempPage/:id\" component={TempPage} />\r\n                <Route path=\"/AGroups\" component={AGroup} /> {/** /:groupID/:groupName/:userID */}\r\n                <Route path=\"/AList\" component={AList} />\r\n                <Route path=\"/SuperMarketList\" component={SuperMarketList} />\r\n                <Route path=\"/MyCart\" component={MyCart} />\r\n              </Switch>\r\n            </ProductsCartContextProvider>\r\n          </ListDetailsContextProvider>\r\n        </GroupDetailsContextProvider>\r\n      </IsLocalContextProvider>\r\n    </div>\r\n\r\n\r\n    // <div>\r\n      \r\n    //   <GoogleMaps/>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <Router  >\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}