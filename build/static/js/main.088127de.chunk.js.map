{"version":3,"sources":["Components/Navbar.js","Images/icons.js","Components/ListItem.jsx","Components/ItemContent.jsx","Components/FormDialog.jsx","Components/AuthenticateContact.js","Components/Contacts.jsx","Components/SendPush.js","Contexts/GroupDetailsContext.js","Pages/HomePage.jsx","Contexts/ListDetailsContext.js","Pages/AGroup.jsx","Pages/TempPage.js","Pages/AList.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","id","useParams","to","Svg","props","xmlns","width","height","viewBox","DeleteIcon","fill","d","ListItem","description","icon","name","className","ItemConent","color","label","side","style","background","FormDialog","useState","open","setOpen","value","setValue","handleClose","Fab","aria-label","onClick","position","Dialog","onClose","aria-labelledby","DialogTitle","headLine","DialogContent","TextField","onChange","e","target","autoFocus","margin","type","fullWidth","DialogActions","Button","console","log","getData","AuthenticateContact","PhoneNumber","a","fetch","method","headers","Headers","res","json","member","UserID","newUser","UserName","body","JSON","stringify","then","result","error","Contacts","contacts","SetContacts","fixedOptions","members","SetMembers","useEffect","userID","data","groupName","Autocomplete","multiple","event","newValue","filter","option","indexOf","options","getOptionLabel","Name","renderTags","tagValue","getTagProps","map","index","Chip","disabled","renderInput","params","variant","placeholder","length","close","alert","SendPushAddToGroup","token","AdminName","GroupName","msg","title","badge","response","GroupDetailsContext","createContext","GroupDetailsContextProvider","groupDetails","SetGroupDetails","Provider","children","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","paper","display","flexDirection","marginBottom","spacing","marginRight","useContext","userIDfromRN","classes","groups","SetGroups","triggerComplexItemAction","swipeProgress","handleSwipeProgress","history","useHistory","apiAppGroups","enable","SetEnable","tempGroupName","SetTempGroupName","localStorage","clear","AddNewGroup","participiants","participiantsArr","i","newParticipiant","push","newGroup","Participiants","ExpoToken","SwipeRightContent","content","direction","ItemContent","action","swal","text","buttons","dangerMode","willDelete","splice","Delete","GetParticipiants","str","g","key","GetIntoGroup","threshold","swipeRight","GroupID","onSwipeProgress","ListItemAvatar","Badge","badgeContent","Avatar","alt","src","arr","textAlign","ListObjContext","ListDetailsContextProvider","listObj","SetListObj","StyledBadge","withStyles","right","top","border","padding","gName","setName","lists","SetLists","textInput","useRef","tempName","apiAppList","swipeRightDataComplex","ListID","onInput","onBlur","userInput","current","inputRef","l","GetIntoList","IconButton","ListName","ListEstimatedPrice","Number","toFixed","n","newList","list","SetList","listName","SetListName","queryString","require","product","SetProduct","productCart","SetProductCart","stores","SetStores","api","tempProduct","tempCity","templimit","apiAppProduct","TestFunction","GetChains","GetStoresByChain","chain_id","sub_chain_id","limit","GetStoresByCityID","city_id","GetStoresByGPS","latitude","longitude","km_radius","order","GetProductsByBarCode","product_barcode","GetProductsByID","product_id","GetProductsByName","product_name","GetPrice","store_id","GetPriceByProductBarCode","GetPriceByProductID","GetHistoryByProductBarCode","from_date","to_date","GetHistoryByProductID","GetCities","GetCityByName","city_name","handleClickCity","CityName","handleClickLimit","LimitPrice","handleClickChoise","query","stringifyUrl","url","resCity","resultCity","resBarcode","resultBarcode","resStoreID","resultStoreID","arrayProduct","price","count","j","resPrice","resultPrice","error_type","parse","store_product_price","p","product_description","product_image","manufacturer_name","estimatedProductPrice","Add2DB","resDB","resultDB","getTotalPrice","tempArrayStore","outOfStock","s","OutOfStock","Store","TotalPrice","SearchSubstitute","indexS","indexO","prodSubstitute","tempArray","tempCheck","willContinue","ConfirmationLimit","barcode","DeleteProduct","store_name","store_address","o","ListDetailsContext","exact","path","component","HomePage","TempPage","AGroup","AList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.088127de.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, withRouter, useParams } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    return (\r\n        <nav>\r\n            <Link to={`/HomePage/${id}`}>הקבוצות שלי</Link> |\r\n            <Link to={`/TempPage/${id}`}>דף זמני</Link> |\r\n            <br />\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\n\r\nconst Svg = props => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 24 24\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const MailIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const ReplyIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\" />\r\n  </Svg>\r\n);\r\nexport const SettingIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\r\n  </Svg>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  '../Styles/ListItemStyle.css';\r\n\r\n\r\n  const ListItem = ({ description, icon, name}) => (\r\n\r\n    <div className=\"listItemComponent\" >\r\n    <div className=\"label\" >\r\n      {icon}\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n    {description && <div className=\"desciption\">{description}</div>}\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nListItem.propTypes = {\r\n  description: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ListItem\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Styles/ItemContentStyle.css';\r\n\r\nconst ItemConent = ({ icon, color, side, label }) => (\r\n  <div  \r\n    style={{ background: color }}\r\n  >\r\n    <div className=\"content\">\r\n      {icon}\r\n      {label && <span>{label}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItemConent.propTypes = {\r\n  icon: PropTypes.node,\r\n  label: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']).isRequired\r\n};\r\n\r\nexport default ItemConent;\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n//import Contacts from '../Components/Contacts'\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  let handleCloseOk = () => {\r\n    setOpen(false);\r\n    //SetEnable(true)\r\n    //SetGroupName(value)\r\n    console.log('dialog',value);\r\n    \r\n    props.getData(value);\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\">\r\n        <AddIcon onClick={handleClickOpen} style={{ position: 'sticky' }} />\r\n      </Fab>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.headLine}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField onChange={e => setValue(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.label}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            בטל\r\n          </Button>\r\n          <Button onClick={handleCloseOk} color=\"primary\">\r\n            אישור\r\n          </Button>\r\n\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n","\r\n  const AuthenticateContact = async (PhoneNumber) => {\r\n\r\n   const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppUsers/AuthenticateContact/${PhoneNumber}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n    })\r\n    let member = await res.json();\r\n\r\n    if (member.UserID === 0) {\r\n        const newUser = {\r\n            UserName: PhoneNumber,\r\n            PhoneNumber: PhoneNumber //The defulat userName is the PhoneNumber until the user will change his name\r\n        }\r\n        console.log('into if')\r\n        await fetch(\"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppUsers/SystemPostUser\", {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(newUser)\r\n        }).then(res => { return res.json(); })\r\n            .then(\r\n                (result) => {\r\n                    console.log('The ', result, ' was successfully added!')\r\n                    member =  result;\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                })\r\n    } \r\n    return member\r\n    \r\n\r\n}\r\n\r\nexport default AuthenticateContact\r\n\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function Contacts(props) {\r\n  const [contacts, SetContacts] = useState([])\r\n  const fixedOptions = [];\r\n  const [members, SetMembers] = useState([...fixedOptions,]);\r\n\r\n\r\n  useEffect(() => {\r\n    (async function fetchMyAPI() {\r\n      const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppUsers/GetUserContacts/${props.userID}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n      })\r\n      let data = await res.json();\r\n      console.log('data', data)\r\n      SetContacts(data)\r\n    }());\r\n\r\n  }, [props.userID])\r\n\r\n  const CloseContacts = () => {\r\n    console.log('value', members)\r\n    if (members.length !== 0) {\r\n      props.close(members)\r\n    }\r\n    else { alert('לא בחרת משתתפים עדיין') }\r\n\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <h5>בחר אנשי קשר לקבוצת {props.groupName}</h5>\r\n      <Autocomplete\r\n        multiple\r\n        id=\"fixed-tags-demo\"\r\n        value={members}\r\n        onChange={(event, newValue) => {\r\n          SetMembers([\r\n            ...fixedOptions,\r\n            ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\r\n          ]);\r\n        }}\r\n        options={contacts}\r\n        getOptionLabel={(option) => option.Name}\r\n        renderTags={(tagValue, getTagProps) =>\r\n          tagValue.map((option, index) => (\r\n            <Chip\r\n              label={option.Name}\r\n              {...getTagProps({ index })}\r\n              disabled={fixedOptions.indexOf(option) !== -1}\r\n            />\r\n          ))\r\n        }\r\n\r\n        style={{ width: 350 }}\r\n        renderInput={(params) => (\r\n          <TextField  {...params} label=\"Contacts\" variant=\"outlined\" placeholder=\"חפש\" />\r\n        )}\r\n      />\r\n      <button onClick={CloseContacts}>הוסף אנשי קשר </button>\r\n    </span>\r\n  );\r\n}\r\n\r\n","\r\n\r\nexport const SendPushAddToGroup = (token, AdminName,GroupName) => {\r\n    console.log('token',token,'Admin',AdminName,'Group',GroupName)\r\n    let msg = {\r\n        to: token,\r\n        title: 'הוספת לקבוצה',\r\n        body: `${AdminName} הוסיף אותך ל${GroupName}`,\r\n        badge: 1,\r\n        data: { name: \"yogev\" }\r\n      }\r\n  \r\n      fetch('http://cors-anywhere.herokuapp.com/https://exp.host/--/api/v2/push/send', {\r\n        method: 'POST',\r\n        body: JSON.stringify(msg),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          if (json != null) {\r\n            console.log(`returned from server\\njson.data= ${JSON.stringify(json.data)}`);\r\n          } else {\r\n            alert('err json');\r\n          }\r\n        });\r\n\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n\r\n\r\nexport const GroupDetailsContext = createContext();\r\n\r\nconst GroupDetailsContextProvider = (props) => {\r\n    const [groupDetails, SetGroupDetails] = useState();\r\n\r\n\r\n    return (\r\n        <GroupDetailsContext.Provider value={{ groupDetails, SetGroupDetails }}>\r\n            {props.children}\r\n        </GroupDetailsContext.Provider>\r\n    );\r\n}\r\nexport default GroupDetailsContextProvider;\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { DeleteIcon } from '../Images/icons'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Avatar, Badge } from '@material-ui/core'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\nimport swal from 'sweetalert'\r\nimport { withRouter, useParams, useHistory } from 'react-router-dom' //,useLocation\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css'\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem'\r\nimport ItemContent from '../Components/ItemContent'\r\nimport FormDialog from '../Components/FormDialog'\r\nimport AuthenticateContact from '../Components/AuthenticateContact'\r\nimport Contacts from '../Components/Contacts'\r\nimport {SendPushAddToGroup} from '../Components/SendPush'\r\n\r\n//Context Api:\r\nimport { GroupDetailsContext } from '../Contexts/GroupDetailsContext'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\n\r\nfunction HomePage() {\r\n\r\n  //Context Api:\r\n  const { SetGroupDetails } = useContext(GroupDetailsContext);\r\n\r\n\r\n  let { userIDfromRN } = useParams();\r\n  //const location = useLocation()\r\n  const classes = useStyles();\r\n  const [groups, SetGroups] = useState([]);\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const history = useHistory();\r\n  const isLocal = false\r\n  var apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\"\r\n  const [enable, SetEnable] = useState(false);\r\n  const [tempGroupName,SetTempGroupName] = useState();\r\n\r\n  if (isLocal) {\r\n    apiAppGroups = \"http://localhost:56794/api/AppGroups/\"\r\n    userIDfromRN = 12\r\n  }\r\n\r\n  useEffect(() => {\r\n    //alert('hello from Rn ' + userIDfromRN);\r\n    //http://proj.ruppin.ac.il/bgroup5/FinalProject/frontEnd\r\n    (async function fetchMyAPI() {\r\n      const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/${userIDfromRN}`, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n        }),\r\n      })\r\n      let data = await res.json();\r\n      console.log('data', data)\r\n      SetGroups(data)\r\n    }());\r\n    localStorage.clear('list')\r\n  }, [userIDfromRN]);\r\n\r\n  const AddNewGroup = async (participiants) => {\r\n    let participiantsArr = []\r\n    for (let i = 0; i < participiants.length; i++) {\r\n      let newParticipiant = await AuthenticateContact(participiants[i].PhoneNumber)\r\n      await participiantsArr.push(newParticipiant)\r\n    }\r\n    console.log('participiantsArr', participiantsArr)\r\n\r\n    let newGroup = {\r\n      GroupName: tempGroupName,\r\n      UserID: userIDfromRN,\r\n      Participiants: participiantsArr\r\n    };\r\n    for (let i = 0; i < participiantsArr.length; i++) {\r\n      if (participiantsArr[i].ExpoToken !== null) {\r\n        SendPushAddToGroup(participiantsArr[i].ExpoToken,groups[0].UserName,tempGroupName)\r\n      }\r\n      \r\n    }\r\n  \r\n\r\n    fetch(apiAppGroups, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newGroup)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          SetGroups([...groups, {\r\n            ...result\r\n          }])\r\n          console.log(result)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n\r\n    console.log(groups)\r\n  }\r\n  const Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת קבוצה\",\r\n        text: \"!כל רשימות הקבוצה ימחקו גם הם\",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppGroups + id, {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  groups.splice(index, 1)\r\n                  SetGroups([...groups])\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  swal(\"הקבוצה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const SwipeRightContent = (id, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          label=\"Delete\"\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(id, index))\r\n  });\r\n\r\n  const GetIntoGroup = (index) => {\r\n\r\n    SetGroupDetails(groups[index]);\r\n\r\n\r\n    history.push(`/AGroups`);\r\n\r\n  }\r\n\r\n  const GetParticipiants = (groups) => {\r\n     let str = groups.Participiants[0].UserName;\r\n      for (let i = 1; i < groups.Participiants.length; i++) {\r\n        str += ', ' + groups.Participiants[i].UserName\r\n      }\r\n      return str;\r\n    }\r\n    \r\n    const AddNewMembers = (groupName)=> {\r\n      console.log('groupName',groupName)\r\n       SetTempGroupName(groupName);    \r\n      SetEnable(true)\r\n    }   \r\n\r\n    const handleCloseListContact = (arr) => {\r\n      SetEnable(false);\r\n      AddNewGroup(arr);\r\n      \r\n    }\r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>הקבוצות שלי</h1>\r\n      </div>\r\n      <div className=\"Maincontent\"  >\r\n        {\r\n          groups.map((g, index) =>\r\n            <span key={index} onClick={() => GetIntoGroup(index)} >\r\n              <SwipeableList className={classes.root} threshold={0.25} >\r\n                <SwipeableListItem\r\n                  swipeRight={SwipeRightContent(g.GroupID, index)}\r\n                  onSwipeProgress={handleSwipeProgress}\r\n                >\r\n                  <ListItemAvatar style={{ marginRight: '5px' }} >\r\n                    <Badge badgeContent={10} color=\"secondary\"  >\r\n                      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </Badge>\r\n                  </ListItemAvatar>\r\n                  <ListItem name={g.GroupName} description={GetParticipiants(g)} />\r\n                </SwipeableListItem>\r\n              </SwipeableList>\r\n\r\n            </span>\r\n          )\r\n        }  \r\n        <br/>\r\n        {enable && <Contacts userID={userIDfromRN} groupName={tempGroupName} close={handleCloseListContact} style={{textAlign:'center'}}/>}\r\n      </div>\r\n      <div className=\"footer\">\r\n        <FormDialog getData={AddNewMembers} userID={userIDfromRN} headLine={'יצירת קבוצה'} label={'שם הקבוצה'} />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default withRouter(HomePage)\r\n\r\n","import React, { createContext, useState } from 'react';\r\n\r\n\r\nexport const ListObjContext = createContext();\r\n\r\nconst ListDetailsContextProvider = (props) => {\r\n    const [listObj, SetListObj] = useState({});\r\n\r\n\r\n    return (\r\n        <ListObjContext.Provider value={{ listObj, SetListObj }}>\r\n            {props.children}\r\n        </ListObjContext.Provider>\r\n    );\r\n}\r\nexport default ListDetailsContextProvider;\r\n\r\n\r\n","\r\n\r\nimport React, { useState, useRef, useEffect, useContext } from 'react'\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\nimport { DeleteIcon } from '../Images/icons'\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { Badge, IconButton, TextField } from '@material-ui/core'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\n\r\n\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list'\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css'\r\nimport swal from 'sweetalert'\r\n\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css'\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem'\r\nimport ItemContent from '../Components/ItemContent'\r\nimport FormDialog from '../Components/FormDialog'\r\n\r\n\r\n//Context Api:\r\nimport { GroupDetailsContext } from '../Contexts/GroupDetailsContext'\r\nimport { ListObjContext } from \"../Contexts/ListDetailsContext\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n    width: '25ch',\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n\r\n  },\r\n\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\n\r\nfunction AGroup() {\r\n    //Context Api:\r\n  const { groupDetails } = useContext(GroupDetailsContext);\r\n  const { SetListObj } = useContext(ListObjContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [gName, setName] = useState(groupDetails.GroupName)\r\n  const [lists, SetLists] = useState([]);\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const textInput = useRef(null);\r\n  let tempName = \"\";\r\n  let isLocal = false;\r\n  let apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\";\r\n  let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\";\r\n  if (isLocal) {\r\n    apiAppGroups = \"http://localhost:56794/api/AppGroups/\";\r\n    apiAppList = \"http://localhost:56794/api/AppList/\";\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (async function fetchMyAPI() {\r\n      try {\r\n        const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/${groupDetails.GroupID}`, {\r\n          method: 'GET',\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          }),\r\n        })\r\n        let data = await res.json();\r\n        SetLists(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    })();\r\n\r\n  }, [groupDetails]);\r\n\r\n  const AddNewList = (n) => {\r\n    let newList = {\r\n      ListName: n,\r\n      GroupID: groupDetails.GroupID,\r\n      UserID: groupDetails.UserID\r\n    }\r\n    fetch(apiAppList, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newList)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          console.log('resultPostList', result)\r\n          SetLists([...lists, {\r\n            ...result\r\n          }])\r\n          console.log(lists)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n  }\r\n  let Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת רשימה\",\r\n        text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppList + id, {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  lists.splice(index, 1)\r\n                  SetLists([...lists])\r\n                  swal(\"הרשימה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  const swipeRightDataComplex = (ListID, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(ListID, index))\r\n  });\r\n\r\n  // let EditDiscription = index => {\r\n  //   if (swipeProgress >= 70) {\r\n  //     swal(\"תיאור הרשימה \", {\r\n  //       content: \"input\",\r\n  //       className: \"swal-input\"\r\n\r\n  //     })\r\n  //       .then((value) => {\r\n  //         list[index].descriptionListList = value;\r\n  //         SetList([...list])\r\n  //         console.log(list)\r\n\r\n  //       });\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const swipeLeftDataComplex = index => ({\r\n  //   content: (\r\n  //     <span style={{ background: '#7cd1f9', width: '100%' }}>\r\n  //       <ItemContent\r\n  //         label=' הוספת תיאור '\r\n  //         side=\"left\"\r\n\r\n  //       />\r\n  //     </span>\r\n\r\n  //   ),\r\n  //   action: () =>\r\n  //     triggerComplexItemAction(EditDiscription(index))\r\n  // });\r\n\r\n\r\n\r\n  const GetIntoList = (index) => {\r\n\r\n  SetListObj(lists[index]);\r\n    history.push('/AList')\r\n\r\n\r\n    //localStorage.setItem('list', JSON.stringify(lists[index]));\r\n\r\n\r\n}\r\n\r\nconst editGroupName = (e) => {\r\n  tempName = \"\";\r\n  tempName = e.target.value\r\n}\r\n\r\nconst Confirmation = () => {\r\n  console.log(tempName)\r\n  if (tempName !== \"\") {\r\n    swal({\r\n      title: \"שינוי שם קבוצה\",\r\n      buttons: ['התחרטתי', 'שנה את השם'],\r\n      dangerMode: true,\r\n    })\r\n      .then((userInput) => {\r\n        if (userInput) {\r\n          console.log(tempName)\r\n          let g = {\r\n            GroupID: groupDetails.GroupID,\r\n            GroupName: tempName\r\n          }\r\n          fetch(apiAppGroups, {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n              'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(g)\r\n          }).then(res => { return res.json(); })\r\n            .then(\r\n              (result) => {\r\n                setName(tempName)\r\n                console.log('The name of ', result, ' id was changed')\r\n                swal('שם הקבוצה שונה');\r\n              },\r\n              (error) => {\r\n                console.log(error)\r\n              })\r\n\r\n        } else {\r\n          textInput.current.value = \"\"\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nreturn (\r\n  <div className=\"container\">\r\n    <div className=\"header\"  >\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        variant=\"outlined\"\r\n        onInput={editGroupName}\r\n        placeholder={gName}\r\n        onBlur={Confirmation}\r\n        inputRef={textInput}\r\n      />\r\n    </div>\r\n    <div className=\"Maincontent\"   >\r\n      {\r\n        lists.map((l, index) =>\r\n          <span key={index} onClick={() => GetIntoList(index)}>\r\n            <SwipeableList key={index} className={classes.root} threshold={0.25}>\r\n              <SwipeableListItem\r\n                swipeRight={swipeRightDataComplex(l.ListID, index)}\r\n                onSwipeProgress={handleSwipeProgress}>\r\n                <IconButton aria-label=\"cart\">\r\n                  <StyledBadge badgeContent={4} color=\"secondary\">\r\n                    <ShoppingCartIcon />\r\n                  </StyledBadge>\r\n                </IconButton>\r\n                <ListItem name={l.ListName} description={`סך עלות משוערת: ${l.ListEstimatedPrice === 0.00 ? 0 : Number(l.ListEstimatedPrice).toFixed(2)}`} />\r\n              </SwipeableListItem>\r\n            </SwipeableList>\r\n          </span>\r\n        )\r\n      }\r\n    </div>\r\n    <div className=\"footer\">\r\n      <FormDialog getData={AddNewList} headLine={'יצירת רשימה'} label={'שם הרשימה'} />\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\n\r\n\r\n\r\nexport default withRouter(AGroup);","import React from 'react';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst TempPage = () => {\r\n\r\n\r\n    let { id, name } = useParams();\r\n    //  const list = localStorage.getItem('list')\r\n\r\n    const TestTheFetch = () => {\r\n        alert('lets go')\r\n        let localUrl = 'http://localhost:56794/api/AppUsers/updateUserContacts';\r\n        let newUser = {\r\n             UserID: 1,\r\n            Contacts: [{ Name: `ג'לאל ה.עו\"ד gam engli`, PhoneNumber: '972526485161123' }, { Name: 'הלוואי בריבוע', PhoneNumber: '+972-50555-4422' }]\r\n\r\n        }\r\n        fetch(localUrl, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(newUser)\r\n        }).then(res => { return res.json(); })\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n    }\r\n\r\n\r\n    // let borla = () => {\r\n    //     console.log(JSON.parse(list));\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h1>temp page</h1>\r\n            <h1>look at this id</h1>\r\n            <h2>{id}, {name}</h2>\r\n            <button onClick={TestTheFetch}>test the localStorage</button>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default withRouter(TempPage);","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { TextField } from '@material-ui/core'\r\n\r\nimport swal from 'sweetalert'\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css'\r\n\r\n//Context Api:\r\nimport { ListObjContext } from \"../Contexts/ListDetailsContext\";\r\n\r\n\r\nfunction AList() {\r\n    const { listObj } = useContext(ListObjContext);\r\n\r\n    const [list, SetList] = useState(listObj);//JSON.parse(localStorage.getItem(\"list\"))\r\n    const [listName, SetListName] = useState(list.ListName)\r\n    const textInput = useRef(null)\r\n    const queryString = require('query-string');\r\n    const [product, SetProduct] = useState([]);\r\n    const [productCart, SetProductCart] = useState([]);\r\n    const [stores, SetStores] = useState([]);\r\n    let api = \"https://api.superget.co.il?api_key=847da8607b5187d8ad1ea24fde8ee8016b19a6db&\"\r\n    let tempProduct = \"\";\r\n    let tempName = \"\";\r\n    let tempCity = \"\";\r\n    let templimit = 0;\r\n    let isLocal = false\r\n    let apiAppProduct = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppProduct/\"\r\n    let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\"\r\n    if (isLocal) {\r\n        apiAppProduct = \"http://localhost:56794/api/AppProduct/\"\r\n        apiAppList = \"http://localhost:56794/api/AppList/\"\r\n    }\r\n   \r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try {\r\n                const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppProduct/${listObj.ListID}`, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                    }),\r\n                })\r\n                let result = await res.json();\r\n                SetProductCart(result)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        )();\r\n    }, [listObj]);\r\n\r\n    const data = {\r\n        TestFunction: {\r\n            action: \"TestFunction\"\r\n        },\r\n        GetChains: {\r\n            action: \"GetChains\"\r\n        },\r\n        GetStoresByChain: {\r\n            action: \"GetStoresByChain\", chain_id: '', sub_chain_id: '', limit: 10\r\n        },\r\n        GetStoresByCityID: {\r\n            action: \"GetStoresByCityID\", city_id: '', limit: 3\r\n        },\r\n        GetStoresByGPS: {\r\n            action: \"GetStoresByGPS\", chain_id: '', sub_chain_id: '', latitude: '', longitude: '', km_radius: '', order: '', limit: 10\r\n        },\r\n        GetProductsByBarCode: {\r\n            action: \"GetProductsByBarCode\", product_barcode: '', limit: 3\r\n        },\r\n        GetProductsByID: {\r\n            action: 'GetProductsByID', product_id: '', limit: 10\r\n        },\r\n        GetProductsByName: {\r\n            action: \"GetProductsByName\", product_name: \"\", limit: 5\r\n        },\r\n        GetPrice: {\r\n            action: \"GetPrice\", store_id: '', limit: 10\r\n        },\r\n        GetPriceByProductBarCode: {\r\n            action: \"GetPriceByProductBarCode\", store_id: '', product_barcode: ''\r\n        },\r\n        GetPriceByProductID: {\r\n            action: \"GetPriceByProductID\", store_id: '', product_id: ''\r\n        },\r\n        GetHistoryByProductBarCode: {\r\n            action: \"GetHistoryByProductBarCode\", store_id: '', product_barcode: '', from_date: '', to_date: ''\r\n        },\r\n        GetHistoryByProductID: {\r\n            action: \"GetHistoryByProductID\", store_id: '', product_id: '', from_date: '', to_date: ''\r\n        },\r\n        GetCities: {\r\n            action: \"GetCities\", limit: 10\r\n        },\r\n        GetCityByName: {\r\n            action: \"GetCityByName\", city_name: '', limit: 1\r\n        }\r\n    }\r\n\r\n    const editListName = (e) => {\r\n        tempName = \"\";\r\n        tempName = e.target.value\r\n    }\r\n\r\n    const Confirmation = () => {\r\n        console.log('is ', tempName)\r\n        if (tempName !== \"\") {\r\n            swal({\r\n                title: \"שינוי שם הרשימה\",\r\n                buttons: ['התחרטתי', 'שנה את השם'],\r\n                dangerMode: true,\r\n            })\r\n                .then((userInput) => {\r\n                    if (userInput) {\r\n                        console.log(tempName)\r\n                        let l = {\r\n                            ListID: list.ListID,\r\n                            ListName: tempName\r\n                        }\r\n                        fetch(apiAppList, {\r\n                            method: 'PUT',\r\n                            headers: new Headers({\r\n                                'Content-type': 'application/json; charset=UTF-8'\r\n                            }),\r\n                            body: JSON.stringify(l)\r\n                        }).then(res => { return res.json(); })\r\n                            .then(\r\n                                (result) => {\r\n                                    SetListName(tempName)\r\n                                    list.ListName = listName\r\n                                    console.log('The name of ', result, ' id was changed')\r\n                                    swal('שם הקבוצה שונה');\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error)\r\n                                })\r\n                    } else {\r\n                        textInput.current.value = \"\"\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCity = (e) => { tempCity = e.target.value }\r\n       \r\n    \r\n\r\n    const handleClickCity = async () => {\r\n        try {\r\n            const res = await fetch(apiAppList + tempCity + '/' + list.ListID, {\r\n                method: 'PUT',\r\n            })\r\n            let result = await res.json();\r\n            list.CityName = result.CityName\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleLimit = (e) => { templimit = e.target.value}\r\n       \r\n    \r\n\r\n    const handleClickLimit = async () => {\r\n        try {\r\n            const res = await fetch(apiAppList + \"limit/\" + templimit + '/' + list.ListID, {\r\n                method: 'PUT',\r\n            })\r\n            let result = await res.json();\r\n            list.LimitPrice = result.LimitPrice\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleProduct = (e) => { tempProduct = e.target.value}\r\n\r\n    const handleClickChoise = async () => {\r\n        if (list.CityName !== null && tempProduct !== '') {\r\n            try {\r\n                //get cityID\r\n                data.GetCityByName.city_name = list.CityName\r\n                let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n                let resCity = await fetch(query, { method: 'GET' })\r\n                let resultCity = await resCity.json();\r\n                console.log('resultCity', resultCity)\r\n                //get productBarcode\r\n                data.GetProductsByName.product_name = tempProduct;\r\n                query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n                let resBarcode = await fetch(query, { method: 'GET' })\r\n                let resultBarcode = await resBarcode.json();\r\n                console.log('product', resultBarcode)\r\n                //getStoreByCityID\r\n                data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n                query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n                let resStoreID = await fetch(query, { method: 'GET' })\r\n                let resultStoreID = await resStoreID.json()\r\n                let arrayProduct = []\r\n                for (let i = 0; i < resultBarcode.length; i++) {\r\n                    let price = 0;\r\n                    let count = 0;\r\n                    for (let j = 0; j < resultStoreID.length; j++) {\r\n                        data.GetPriceByProductBarCode.store_id = resultStoreID[j].store_id\r\n                        data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n                        query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n                        let resPrice = await fetch(query, { method: 'GET' })\r\n                        let resultPrice = await resPrice.json();\r\n                        if (resultPrice.error_type === \"NO_DATA\") {\r\n                            console.log('err')\r\n                            continue;\r\n                        }\r\n                        price += JSON.parse(resultPrice[0].store_product_price)\r\n                        count++\r\n                    }\r\n                    price = price / count\r\n\r\n                    console.log('my price', price)\r\n                    let p = {\r\n                        product_barcode: resultBarcode[i].product_barcode,\r\n                        product_name: resultBarcode[i].product_name,\r\n                        product_description: resultBarcode[i].product_description,\r\n                        product_image: resultBarcode[i].product_image,\r\n                        manufacturer_name: resultBarcode[i].manufacturer_name,\r\n                        estimatedProductPrice: Number(price.toFixed(2))\r\n                    }\r\n                    arrayProduct.push(p)\r\n                }\r\n                SetProduct(...product, arrayProduct)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else alert('מלא את השדות תחילה')\r\n\r\n\r\n    }\r\n\r\n    const ConfirmationLimit = (index) => {\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        let tempCheck = list.ListEstimatedPrice + product[index].estimatedProductPrice\r\n        console.log('temp', tempCheck)\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        if (tempCheck > list.LimitPrice) {\r\n            swal({\r\n                text: \"שים לב! חרגת מהמגבלה\",\r\n                buttons: ['בטל', 'המשך בכל זאת'],\r\n                dangerMode: true,\r\n            }).then((willContinue) => {\r\n                if (willContinue) {\r\n                    Add2DB(index)\r\n                }\r\n            })\r\n        } else if (tempCheck > list.LimitPrice * 0.7) {\r\n            alert('שים לב! עברת 70% מהמגבלה')\r\n            Add2DB(index)\r\n        }\r\n        else Add2DB(index)\r\n    }\r\n\r\n    const Add2DB = async (index) => {\r\n\r\n        let p = {\r\n            ...product[index],\r\n            ListID: list.ListID,\r\n            GroupID: list.GroupID\r\n        }\r\n        const resDB = await fetch(apiAppProduct, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(p)\r\n        })\r\n        const resultDB = await resDB.json()\r\n        console.log('result', resultDB)\r\n        list.ListEstimatedPrice += resultDB.estimatedProductPrice\r\n        SetList(list)\r\n        SetProduct([])\r\n        SetProductCart([...productCart, resultDB])\r\n        alert('המוצר התווסף בהצלחה')\r\n    }\r\n\r\n    const getTotalPrice = async () => {\r\n        try {\r\n            //getCityID\r\n            data.GetCityByName.city_name = list.CityName\r\n            console.log(list.CityName);\r\n            \r\n            let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n            console.log('0')\r\n            let resCity = await fetch(query, { method: 'GET' })\r\n            let resultCity = await resCity.json();\r\n            console.log('1')\r\n            //getStorebycityId\r\n            data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n            let resStoreID = await fetch(query, { method: 'GET' })\r\n            let resultStoreID = await resStoreID.json();\r\n            console.log('2')\r\n            let tempArrayStore = []\r\n\r\n            for (let i = 0; i < resultStoreID.length; i++) {\r\n                let p = 0;\r\n                let outOfStock = [];\r\n                for (let j = 0; j < productCart.length; j++) {\r\n                    data.GetPriceByProductBarCode.product_barcode = productCart[j].product_barcode\r\n                    data.GetPriceByProductBarCode.store_id = resultStoreID[i].store_id\r\n                    query = queryString.stringifyUrl({ url: \"https://cors-anywhere.herokuapp.com/\" + api, query: data.GetPriceByProductBarCode })\r\n                    const res = await fetch(query, { method: 'GET' })\r\n                    var result = await res.json()\r\n                    console.log('3')\r\n                    if (result.error_type === \"NO_DATA\") {\r\n                        alert('המוצר ' + productCart[j].product_name + ' לא קיים בחנות זו ')\r\n                        outOfStock.push(productCart[j])\r\n                        continue;\r\n\r\n                    }\r\n                    p += JSON.parse(result[0].store_product_price)\r\n                }\r\n                const s = {\r\n                    OutOfStock: outOfStock,\r\n                    Store: resultStoreID[i],\r\n                    TotalPrice: Number(p.toFixed(2))\r\n                }\r\n                tempArrayStore.push(s)\r\n            }\r\n            SetStores(tempArrayStore)\r\n            console.log('store', stores)\r\n            // history.push(`/ListSuperMarket`, { params:tempArrayStore })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const SearchSubstitute = async (indexS, indexO) => {\r\n        console.log(stores[indexS].OutOfStock[indexO])\r\n        let prodSubstitute = stores[indexS].OutOfStock[indexO];\r\n        data.GetProductsByName.product_name = prodSubstitute.product_description\r\n        let query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n        let resBarcode = await fetch(query, { method: 'GET' })\r\n        let resultBarcode = await resBarcode.json();\r\n        let tempArray = []\r\n        for (let i = 0; i < resultBarcode.length; i++) {\r\n            data.GetPriceByProductBarCode.store_id = stores[indexS].store_id\r\n            data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n            let resPrice = await fetch(query, { method: 'GET' })\r\n            let resultPrice = await resPrice.json();\r\n            console.log('a', resultPrice)\r\n            if (resultPrice.product_barcode === prodSubstitute.product_barcode) {\r\n                continue;\r\n            }\r\n            tempArray.push(resultPrice)\r\n        }\r\n        console.log(tempArray)\r\n        if (tempArray.length !== 0) {\r\n            SetProduct(tempArray)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const DeleteProduct = (index, barcode, ListID) => {\r\n        console.log(productCart[index])\r\n        swal({\r\n            title: \"מחיקת פריט\",\r\n            text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n            buttons: ['בטל', 'מחק'],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    fetch(apiAppProduct + barcode + '/' + ListID, {\r\n                        method: 'DELETE',\r\n                        headers: new Headers({\r\n                            'Content-type': 'application/json; charset=UTF-8'\r\n                        })\r\n                    }).then(res => { return res.json(); })\r\n                        .then(\r\n                            (result) => {\r\n                                console.log('The ', result, ' was successfully deleted!')\r\n                                list.ListEstimatedPrice -= productCart[index].estimatedProductPrice.toFixed(2)\r\n                                productCart.splice(index, 1)\r\n                                SetProductCart([...productCart])\r\n                                swal(\"המוצר נמחק \")\r\n                            },\r\n                            (error) => {\r\n                                console.log(error)\r\n                            })\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    onInput={editListName}\r\n                    placeholder={listName}\r\n                    onBlur={Confirmation}\r\n                    inputRef={textInput}\r\n                />\r\n            </div>\r\n            <div className=\"Maincontent\">\r\n                <h3>{list.CityName} </h3>\r\n                <input type={'text'} placeholder='הזן עיר חדשה' onChange={handleCity} /> &nbsp;\r\n                <button onClick={handleClickCity}>הגדר עיר לחיפוש </button>\r\n                <h3>{list.LimitPrice}</h3>\r\n                <input type={'number'} placeholder='הזן מגבלה חדשה' onChange={handleLimit}></input> &nbsp;\r\n                <button onClick={handleClickLimit}>הגדר מגבלה </button> <br /> <br /> <br /> <br />\r\n                <input type={'text'} placeholder='בחר מוצר ' onChange={handleProduct} /> &nbsp;\r\n                <button onClick={handleClickChoise}>חפש מוצר</button>\r\n                <br />\r\n                <h2>מוצרים</h2>\r\n                {product.map((p, index) =>\r\n                    <div key={index}>\r\n                        <p>\r\n                            {p.product_name} <b> במחיר</b> {p.estimatedProductPrice} &nbsp;\r\n                                <button onClick={() => ConfirmationLimit(index)}>הוסף לרשימה</button>\r\n                        </p>\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <h2>הרשימה שלי </h2>\r\n                    {productCart.map((p, index) =>\r\n                        <div key={index}>\r\n                            <p>\r\n                                {p.product_name} <b> במחיר</b> {p.estimatedProductPrice} &nbsp;\r\n                            <button onClick={() => DeleteProduct(index, p.product_barcode, p.ListID)}>מחק מהרשימה</button>\r\n                            </p>\r\n                            {productCart.length - 1 === index ? 'מחיר משוער ' + Number(list.ListEstimatedPrice).toFixed(2) : false}\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n                <br />\r\n                <button onClick={getTotalPrice}>חפש סופרים בסביבתך</button> <br /><br />\r\n                <b><u>רשימת הסופרים</u></b>\r\n                {stores.map((s, indexS) =>\r\n                    <div key={indexS}>\r\n                        <div>\r\n                            <b>{s.Store.store_name}</b> ברחוב {s.Store.store_address} <b>:עלות סל הקניות הוא </b> {s.TotalPrice} <br />\r\n                            <u><small>המוצרים שחסרים הם</small></u>\r\n                            {s.OutOfStock.map((o, indexO) =>\r\n                                <p key={indexO}>\r\n                                    <span>{o.product_name},</span>\r\n                                    <button onClick={() => SearchSubstitute(indexS, indexO)} >חפש מוצר תחליפי</button>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"footer\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default withRouter(AList)\r\n","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\n\r\n//styles:\r\nimport './App.css'\r\n\r\n//Our Components:\r\nimport Navbar from './Components/Navbar'\r\n\r\n//pages: \r\nimport HomePage from './Pages/HomePage'\r\nimport AGroup from './Pages/AGroup'\r\nimport TempPage from './Pages/TempPage'\r\nimport AList from './Pages/AList'\r\n\r\n\r\n//Contexts Providers:\r\nimport GroupDetailsContextProvider from './Contexts/GroupDetailsContext'\r\nimport ListDetailsContextProvider from './Contexts/ListDetailsContext'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  //\"homepage\": \"http://proj.ruppin.ac.il/bgroup5/FinalProject/frontEnd\"\r\n  return (\r\n    <div className=\"App\">\r\n      <GroupDetailsContextProvider>\r\n        <ListDetailsContextProvider>\r\n\r\n\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} /> {/**makes the HomePage homepage even when the url clean */}\r\n            <Route path=\"/HomePage/:userIDfromRN\" component={HomePage} />\r\n            <Route path=\"/TempPage/:id\" component={TempPage} />\r\n            <Route path=\"/AGroups\" component={AGroup} /> {/** /:groupID/:groupName/:userID */}\r\n            <Route path=\"/AList\" component={AList} />\r\n          </Switch>\r\n\r\n        </ListDetailsContextProvider>\r\n      </GroupDetailsContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <Router  >\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}