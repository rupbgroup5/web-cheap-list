{"version":3,"sources":["Components/Navbar.js","Images/icons.js","Components/ListItem.jsx","Components/ItemContent.jsx","Components/FormDialog.jsx","Pages/HomePage.jsx","Pages/AGroups.jsx","Pages/TempPage.js","Pages/AList.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","id","to","Svg","props","xmlns","width","height","viewBox","DeleteIcon","fill","d","ListItem","description","icon","name","className","ItemConent","color","label","side","style","background","FormDialog","useState","open","setOpen","value","setValue","handleClose","Fab","aria-label","onClick","position","Dialog","onClose","aria-labelledby","DialogTitle","headLine","DialogContent","TextField","onChange","e","target","autoFocus","margin","type","fullWidth","DialogActions","Button","getData","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","paper","display","flexDirection","marginBottom","spacing","marginRight","useParams","classes","useLocation","groups","SetGroups","triggerComplexItemAction","swipeProgress","handleSwipeProgress","history","useHistory","apiAppGroups","useEffect","a","fetch","method","headers","Headers","res","json","data","fetchMyAPI","SwipeRightContent","index","content","direction","ItemContent","action","swal","title","text","buttons","dangerMode","then","willDelete","result","splice","console","log","error","Delete","map","g","key","push","group","GetIntoGroup","threshold","swipeRight","GroupID","onSwipeProgress","ListItemAvatar","Badge","badgeContent","Avatar","alt","src","GroupName","newGroup","UserID","body","JSON","stringify","StyledBadge","withStyles","badge","right","top","border","padding","state","groupName","setName","lists","SetLists","textInput","useRef","tempName","apiAppList","swipeRightDataComplex","ListID","variant","onInput","placeholder","onBlur","userInput","current","inputRef","l","list","GetIntoList","IconButton","ListName","ListEstimatedPrice","Number","toFixed","n","newList","match","alert","UserName","UserMail","Contacts","Name","PhoneNumber","listName","SetListName","queryString","require","product","SetProduct","productCart","SetProductCart","stores","SetStores","api","tempProduct","tempCity","templimit","apiAppProduct","TestFunction","GetChains","GetStoresByChain","chain_id","sub_chain_id","limit","GetStoresByCityID","city_id","GetStoresByGPS","latitude","longitude","km_radius","order","GetProductsByBarCode","product_barcode","GetProductsByID","product_id","GetProductsByName","product_name","GetPrice","store_id","GetPriceByProductBarCode","GetPriceByProductID","GetHistoryByProductBarCode","from_date","to_date","GetHistoryByProductID","GetCities","GetCityByName","city_name","handleClickCity","CityName","handleClickLimit","LimitPrice","handleClickChoise","query","stringifyUrl","url","resCity","resultCity","resBarcode","resultBarcode","resStoreID","resultStoreID","arrayProduct","i","length","price","count","j","resPrice","resultPrice","error_type","parse","store_product_price","p","product_description","product_image","manufacturer_name","estimatedProductPrice","Add2DB","resDB","resultDB","getTotalPrice","tempArrayStore","outOfStock","s","OutOfStock","Store","TotalPrice","SearchSubstitute","indexS","indexO","prodSubstitute","tempArray","tempCheck","willContinue","ConfirmationLimit","barcode","DeleteProduct","store_name","store_address","o","param","goBack","fontSize","paddingLeft","float","exact","path","component","HomePage","TempPage","AGroups","AList","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b1fbdc37.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = ({ id }) => {\r\n\r\n    // const history = useHistory()\r\n\r\n    return (\r\n        <nav>\r\n            {/* <Link to='/'>ראשי</Link> | */}\r\n            <Link to={`/HomePage/${id}`}>הקבוצות שלי</Link> |\r\n            <Link to={`/TempPage/${id}`}>דף זמני</Link> |\r\n            <br />\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\n\r\nconst Svg = props => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 24 24\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport const DeleteIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const MailIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\r\n  </Svg>\r\n);\r\n\r\nexport const ReplyIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\" />\r\n  </Svg>\r\n);\r\nexport const SettingIcon = () => (\r\n  <Svg>\r\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\r\n    <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\r\n  </Svg>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  '../Styles/ListItemStyle.css';\r\n\r\n\r\n  const ListItem = ({ description, icon, name}) => (\r\n\r\n    <div className=\"listItemComponent\" >\r\n    <div className=\"label\" >\r\n      {icon}\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n    {description && <div className=\"desciption\">{description}</div>}\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nListItem.propTypes = {\r\n  description: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ListItem\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Styles/ItemContentStyle.css';\r\n\r\nconst ItemConent = ({ icon, color, side, label }) => (\r\n  <div  \r\n    style={{ background: color }}\r\n  >\r\n    <div className=\"content\">\r\n      {icon}\r\n      {label && <span>{label}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItemConent.propTypes = {\r\n  icon: PropTypes.node,\r\n  label: PropTypes.string,\r\n  side: PropTypes.oneOf(['left', 'right']).isRequired\r\n};\r\n\r\nexport default ItemConent;\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  let handleCloseOk = () => {\r\n    setOpen(false);\r\n    props.getData(value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\">\r\n        <AddIcon onClick={handleClickOpen} style={{ position: 'sticky' }} />\r\n      </Fab>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.headLine}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField onChange={e => setValue(e.target.value)}     \r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={props.label}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            בטל\r\n          </Button>\r\n          <Button onClick={handleCloseOk} color=\"primary\">\r\n            אישור\r\n          </Button>\r\n\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DeleteIcon } from '../Images/icons';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Badge} from '@material-ui/core';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\nimport swal from 'sweetalert';\r\nimport { withRouter, useHistory,useParams,useLocation } from 'react-router-dom';\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css';\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem';\r\nimport ItemContent from '../Components/ItemContent';\r\nimport FormDialog from '../Components/FormDialog';\r\n\r\n\r\n//Pages\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n  }\r\n\r\n}));\r\n\r\n\r\nfunction HomePage() {\r\n  let { id } = useParams();\r\n  const location = useLocation()\r\n  const classes = useStyles();\r\n  const [groups, SetGroups] = useState([]);\r\n  const [,triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const history = useHistory();\r\n  const isLocal = false\r\n  var apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\"\r\n\r\n  if (isLocal){\r\n    apiAppGroups =  \"http://localhost:56794/api/AppGroups/\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    // alert(id + ' is here');\r\n//http://proj.ruppin.ac.il/bgroup5/FinalProject/frontEnd/api/AppGroups/${id}\r\n    async function fetchMyAPI() {\r\n        const res = await fetch( `http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/`, {\r\n          method: 'GET',\r\n          headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n          }),\r\n        })\r\n        let data = await res.json();\r\n        SetGroups(data)\r\n    }\r\n\r\n    fetchMyAPI()\r\n  },[id]);\r\n\r\n  const AddNewGroup = (name) => {\r\n    let newGroup = {\r\n      GroupName: name,\r\n      UserID:1\r\n    }\r\n    fetch(apiAppGroups, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newGroup)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          SetGroups([...groups, {\r\n            ...result\r\n          }])\r\n          console.log(result)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n       \r\n        console.log(groups)\r\n  }\r\n  const Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת קבוצה\",\r\n        text: \"!כל רשימות הקבוצה ימחקו גם הם\",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppGroups + id , {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                 'Content-type': 'application/json; charset=UTF-8' \r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  groups.splice(index, 1)\r\n                  SetGroups([...groups])\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  swal(\"הקבוצה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })            \r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const SwipeRightContent = (id, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          label=\"Delete\"\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(id, index))\r\n  });\r\n\r\n    const GetIntoGroup = (index) => {\r\n      //  history.push(`/AGroups`)\r\n      //  history.location.hash = (groups[index]);\r\n      history.push(`/AGroups`,{group: groups[index]})\r\n      \r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1>הקבוצות שלי</h1>\r\n        </div>\r\n        <div className=\"Maincontent\"  >\r\n          {\r\n            groups.map((g, index) =>\r\n              <span key={index} onClick={() => GetIntoGroup(index)} >\r\n                <SwipeableList className={classes.root} threshold={0.25} >\r\n                  <SwipeableListItem\r\n                    swipeRight={SwipeRightContent(g.GroupID, index)}\r\n                    onSwipeProgress={handleSwipeProgress}\r\n                  >\r\n                    <ListItemAvatar style={{ marginRight: '5px' }} >\r\n                      <Badge badgeContent={10} color=\"secondary\"  >\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                      </Badge>\r\n                    </ListItemAvatar>               \r\n                    <ListItem name={g.GroupName} description=\"שמות הקבוצה יופיעו פה\" />\r\n                  </SwipeableListItem>\r\n                </SwipeableList>\r\n\r\n              </span>\r\n            )\r\n          }\r\n        </div>\r\n        <div className=\"footer\">\r\n          <FormDialog getData={AddNewGroup} headLine={'יצירת קבוצה'} label={'שם הקבוצה'} />\r\n        </div>\r\n       \r\n      </div>\r\n    \r\n    );\r\n\r\n  }\r\n\r\n\r\nexport default withRouter(HomePage)\r\n\r\n","\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { withRouter, useLocation, useHistory, Redirect,Route,Switch} from 'react-router-dom';\r\nimport { DeleteIcon } from '../Images/icons';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Badge, IconButton, TextField } from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\n\r\n\r\nimport {\r\n  SwipeableList,\r\n  SwipeableListItem\r\n} from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css';\r\n\r\n//Our Components\r\nimport ListItem from '../Components/ListItem';\r\nimport ItemContent from '../Components/ItemContent';\r\nimport FormDialog from '../Components/FormDialog';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  '& > *': {\r\n    marginBottom: theme.spacing(2),\r\n    margin: theme.spacing(1),\r\n    width: '25ch',\r\n  },\r\n  '& .MuiBadge-root': {\r\n    marginRight: theme.spacing(4),\r\n\r\n  },\r\n}));\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\nfunction AGroup() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const group = location.state.group;\r\n  const [groupName, setName] = useState(group.GroupName)\r\n  const [lists, SetLists] = useState([]);\r\n  const [, triggerComplexItemAction] = useState();\r\n  const [swipeProgress, handleSwipeProgress] = useState();\r\n  const textInput = useRef(null);\r\n  let tempName = \"\";\r\n  let isLocal = false;\r\n  let apiAppGroups = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppGroups/\";\r\n  let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\";\r\n  if (isLocal) {\r\n    apiAppGroups = \"http://localhost:56794/api/AppGroups/\";\r\n    apiAppList = \"http://localhost:56794/api/AppList/\";\r\n  }\r\n\r\n  async function fetchMyAPI(group) {\r\n   try {\r\n    const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/${group.GroupID}`, {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n      }),\r\n    })\r\n    let data = await res.json();\r\n    SetLists(data)\r\n   } catch (error) {\r\n     console.log(error)\r\n   }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    fetchMyAPI(group)\r\n  }, [group]);\r\n\r\n  const AddNewList = (n) => {\r\n    let newList = {\r\n      ListName: n,\r\n      GroupID: group.GroupID,\r\n      UserID:group.UserID\r\n    }\r\n    fetch(apiAppList, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }),\r\n      body: JSON.stringify(newList)\r\n    }).then(res => { return res.json(); })\r\n      .then(\r\n        (result) => {\r\n          console.log('The ', result, ' was successfully added!')\r\n          console.log('resultPostList', result)\r\n          SetLists([...lists, {\r\n           ...result\r\n          }])\r\n          console.log(lists)\r\n        \r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        })\r\n  }\r\n  let Delete = (id, index) => {\r\n    if (swipeProgress >= 70) {\r\n      swal({\r\n        title: \"מחיקת רשימה\",\r\n        text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n        buttons: ['בטל', 'מחק'],\r\n        dangerMode: true,\r\n      })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            fetch(apiAppList + id, {\r\n              method: 'DELETE',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              })\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  console.log('The ', result, ' was successfully deleted!')\r\n                  lists.splice(index, 1)\r\n                  SetLists([...lists])\r\n                  swal(\"הרשימה נמחקה \")\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  const swipeRightDataComplex = (ListID, index) => ({\r\n    content: (\r\n      <span style={{ background: 'red', width: '100%', direction: 'ltr' }}>\r\n        <ItemContent\r\n          icon={<DeleteIcon />}\r\n          side=\"right\"\r\n        />\r\n      </span>\r\n    ),\r\n    action: () =>\r\n      triggerComplexItemAction(Delete(ListID, index))\r\n  });\r\n\r\n  // let EditDiscription = index => {\r\n  //   if (swipeProgress >= 70) {\r\n  //     swal(\"תיאור הרשימה \", {\r\n  //       content: \"input\",\r\n  //       className: \"swal-input\"\r\n\r\n  //     })\r\n  //       .then((value) => {\r\n  //         list[index].descriptionListList = value;\r\n  //         SetList([...list])\r\n  //         console.log(list)\r\n\r\n  //       });\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const swipeLeftDataComplex = index => ({\r\n  //   content: (\r\n  //     <span style={{ background: '#7cd1f9', width: '100%' }}>\r\n  //       <ItemContent\r\n  //         label=' הוספת תיאור '\r\n  //         side=\"left\"\r\n\r\n  //       />\r\n  //     </span>\r\n\r\n  //   ),\r\n  //   action: () =>\r\n  //     triggerComplexItemAction(EditDiscription(index))\r\n  // });\r\n\r\n\r\n\r\n  const GetIntoList = (index) => {\r\n    history.push(`/AList`,{list: lists[index]})\r\n  }\r\n\r\n  const editGroupName = (e) => {\r\n    tempName = \"\";\r\n    tempName = e.target.value\r\n  }\r\n\r\n  const Confirmation = () => {\r\n    console.log(tempName)\r\n    if (tempName !== \"\") {\r\n      swal({\r\n        title: \"שינוי שם קבוצה\",\r\n        buttons: ['התחרטתי', 'שנה את השם'],\r\n        dangerMode: true,\r\n      })\r\n        .then((userInput) => {\r\n          if (userInput) {\r\n            console.log(tempName)\r\n            let g = {\r\n              GroupID: group.GroupID,\r\n              GroupName: tempName\r\n            }\r\n            fetch(apiAppGroups, {\r\n              method: 'PUT',\r\n              headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n              }),\r\n              body: JSON.stringify(g)\r\n            }).then(res => { return res.json(); })\r\n              .then(\r\n                (result) => {\r\n                  setName(tempName)\r\n                  console.log('The name of ', result, ' id was changed')\r\n                  swal('שם הקבוצה שונה');\r\n                },\r\n                (error) => {\r\n                  console.log(error)\r\n                })\r\n\r\n          } else {\r\n            textInput.current.value = \"\"\r\n          }\r\n        })\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\"  >\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          onInput={editGroupName}\r\n          placeholder={groupName}\r\n          onBlur={Confirmation}\r\n          inputRef={textInput}\r\n        />\r\n      </div>\r\n      <div className=\"Maincontent\"   >\r\n        {\r\n          lists.map((l, index) =>\r\n            <span key={index} onClick={() => GetIntoList(index)}>\r\n              <SwipeableList key={index} className={classes.root} threshold={0.25}>\r\n                <SwipeableListItem\r\n                  swipeRight={swipeRightDataComplex(l.ListID, index)}\r\n                  onSwipeProgress={handleSwipeProgress}>\r\n                  <IconButton aria-label=\"cart\">\r\n                    <StyledBadge badgeContent={4} color=\"secondary\">\r\n                      <ShoppingCartIcon />\r\n                    </StyledBadge>\r\n                  </IconButton>\r\n                  <ListItem name={l.ListName} description={`סך עלות משוערת: ${l.ListEstimatedPrice === 0.00 ? 0 : Number(l.ListEstimatedPrice).toFixed(2)}`} />\r\n                </SwipeableListItem>\r\n              </SwipeableList>\r\n            </span>\r\n\r\n          )\r\n        }\r\n      </div>\r\n      <div className=\"footer\">\r\n        <FormDialog getData={AddNewList} headLine={'יצירת רשימה'} label={'שם הרשימה'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default withRouter(AGroup);","import React from 'react';\r\nimport { withRouter, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst TempPage = ({ match }) => {\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n    const TestTheFetch = () => {\r\n        alert('lets go')\r\n        let localUrl = 'http://localhost:56794/api/AppUsers/PostUser';\r\n        let newUser = {\r\n            // UserID: 23,\r\n            UserName: 'checkManager',\r\n            UserMail: 'checkManager@gmail.com',\r\n            Contacts: [{ Name: `ג'לאל ה.עו\"ד gam engli`, PhoneNumber: '050-5554422' }, { Name: 'הלוואי בריבוע', PhoneNumber: '050-5554422' }]\r\n\r\n        }\r\n        fetch(localUrl, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(newUser)\r\n        }).then(res => { return res.json(); })\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>temp page</h1>\r\n            <h1>look at this id</h1>\r\n            <h2>{id}</h2>\r\n            <button onClick={TestTheFetch}>test the fetch</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TempPage);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { withRouter, useLocation } from 'react-router-dom';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport swal from 'sweetalert';\r\n\r\n//Styles\r\nimport '../Styles/HomeStyle.css';\r\n\r\nfunction AList() {\r\n\r\n    const location = useLocation()\r\n    const list = location.state.list\r\n    console.log('list',list)\r\n    const [listName, SetListName] = useState(list.ListName)\r\n    const textInput = useRef(null)\r\n    const queryString = require('query-string');\r\n    const [product, SetProduct] = useState([]);\r\n    const [productCart, SetProductCart] = useState([]);\r\n    const [stores, SetStores] = useState([]);\r\n    let api = \"https://api.superget.co.il?api_key=847da8607b5187d8ad1ea24fde8ee8016b19a6db&\"\r\n    let tempProduct = '';\r\n    let tempName = '';\r\n    let tempCity = '';\r\n    let templimit = 0;\r\n    let isLocal = false\r\n    let apiAppProduct = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppProduct/\"\r\n    let apiAppList = \"http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppList/\"\r\n    if (isLocal) {\r\n        apiAppProduct = \"http://localhost:56794/api/AppProduct/\"\r\n        apiAppList = \"http://localhost:56794/api/AppList/\"\r\n    }\r\n    async function fetchMyAPI(list) {\r\n        try {\r\n            const res = await fetch(`http://proj.ruppin.ac.il/bgroup5/FinalProject/backEnd/api/AppProduct/${list.ListID}`, {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json; charset=UTF-8',\r\n                }),\r\n            })\r\n            let result = await res.json();\r\n            SetProductCart(result)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMyAPI(list)\r\n    }, [list]);\r\n\r\n    const data = {\r\n        TestFunction: {\r\n            action: \"TestFunction\"\r\n        },\r\n        GetChains: {\r\n            action: \"GetChains\"\r\n        },\r\n        GetStoresByChain: {\r\n            action: \"GetStoresByChain\", chain_id: '', sub_chain_id: '', limit: 10\r\n        },\r\n        GetStoresByCityID: {\r\n            action: \"GetStoresByCityID\", city_id: '', limit: 3\r\n        },\r\n        GetStoresByGPS: {\r\n            action: \"GetStoresByGPS\", chain_id: '', sub_chain_id: '', latitude: '', longitude: '', km_radius: '', order: '', limit: 10\r\n        },\r\n        GetProductsByBarCode: {\r\n            action: \"GetProductsByBarCode\", product_barcode: '', limit: 3\r\n        },\r\n        GetProductsByID: {\r\n            action: 'GetProductsByID', product_id: '', limit: 10\r\n        },\r\n        GetProductsByName: {\r\n            action: \"GetProductsByName\", product_name: \"\", limit: 5\r\n        },\r\n        GetPrice: {\r\n            action: \"GetPrice\", store_id: '', limit: 10\r\n        },\r\n        GetPriceByProductBarCode: {\r\n            action: \"GetPriceByProductBarCode\", store_id: '', product_barcode: ''\r\n        },\r\n        GetPriceByProductID: {\r\n            action: \"GetPriceByProductID\", store_id: '', product_id: ''\r\n        },\r\n        GetHistoryByProductBarCode: {\r\n            action: \"GetHistoryByProductBarCode\", store_id: '', product_barcode: '', from_date: '', to_date: ''\r\n        },\r\n        GetHistoryByProductID: {\r\n            action: \"GetHistoryByProductID\", store_id: '', product_id: '', from_date: '', to_date: ''\r\n        },\r\n        GetCities: {\r\n            action: \"GetCities\", limit: 10\r\n        },\r\n        GetCityByName: {\r\n            action: \"GetCityByName\", city_name: '', limit: 1\r\n        }\r\n    }\r\n\r\n    const editListName = (e) => {\r\n        tempName = \"\";\r\n        tempName = e.target.value\r\n    }\r\n\r\n    const Confirmation = () => {\r\n        console.log(tempName)\r\n        if (tempName !== \"\") {\r\n            swal({\r\n                title: \"שינוי שם הרשימה\",\r\n                buttons: ['התחרטתי', 'שנה את השם'],\r\n                dangerMode: true,\r\n            })\r\n                .then((userInput) => {\r\n                    if (userInput) {\r\n                        console.log(tempName)\r\n                        let l = {\r\n                            ListID: list.ListID,\r\n                            ListName: tempName\r\n                        }\r\n                        fetch(apiAppList, {\r\n                            method: 'PUT',\r\n                            headers: new Headers({\r\n                                'Content-type': 'application/json; charset=UTF-8'\r\n                            }),\r\n                            body: JSON.stringify(l)\r\n                        }).then(res => { return res.json(); })\r\n                            .then(\r\n                                (result) => {\r\n                                    SetListName(tempName)\r\n                                    console.log('The name of ', result, ' id was changed')\r\n                                    swal('שם הקבוצה שונה');\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error)\r\n                                })\r\n                    } else {\r\n                        textInput.current.value = \"\"\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCity = (e) => {\r\n        tempCity = e.target.value\r\n    }\r\n\r\n    const handleClickCity = async () => {\r\n        try {\r\n            const res = await fetch(apiAppList + tempCity + '/' + list.ListID, {\r\n                method: 'PUT',\r\n            })\r\n            let result = await res.json();\r\n            list.CityName = result.CityName\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleLimit = (e) => {\r\n        templimit = e.target.value\r\n    }\r\n\r\n    const handleClickLimit = async () => {\r\n        try {\r\n            const res = await fetch(apiAppList + \"limit/\" + templimit + '/' + list.ListID, {\r\n                method: 'PUT',\r\n            })\r\n            let result = await res.json();\r\n            list.LimitPrice = result.LimitPrice\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleProduct = (e) => {\r\n        tempProduct = e.target.value\r\n    }\r\n\r\n    const handleClickChoise = async () => {\r\n        if (list.CityName !== null && tempProduct !== '') {\r\n            try {\r\n                //get cityID\r\n                data.GetCityByName.city_name = list.CityName\r\n                let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n                let resCity = await fetch(query, { method: 'GET' })\r\n                let resultCity = await resCity.json();\r\n                console.log('resultCity', resultCity)\r\n                //get productBarcode\r\n                data.GetProductsByName.product_name = tempProduct;\r\n                query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n                let resBarcode = await fetch(query, { method: 'GET' })\r\n                let resultBarcode = await resBarcode.json();\r\n                console.log('product', resultBarcode)\r\n                //getStoreByCityID\r\n                data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n                query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n                let resStoreID = await fetch(query, { method: 'GET' })\r\n                let resultStoreID = await resStoreID.json()\r\n                let arrayProduct = []\r\n                for (let i = 0; i < resultBarcode.length; i++) {\r\n                    let price = 0;\r\n                    let count = 0;\r\n                    for (let j = 0; j < resultStoreID.length; j++) {\r\n                        data.GetPriceByProductBarCode.store_id = resultStoreID[j].store_id\r\n                        data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n                        query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n                        let resPrice = await fetch(query, { method: 'GET' })\r\n                        let resultPrice = await resPrice.json();\r\n                        if (resultPrice.error_type === \"NO_DATA\") {\r\n                            console.log('err')\r\n                            continue;\r\n                        }\r\n                        price += JSON.parse(resultPrice[0].store_product_price)\r\n                        count++\r\n                    }\r\n                    price = price / count\r\n\r\n                    console.log('my price', price)\r\n                    let p = {\r\n                        product_barcode: resultBarcode[i].product_barcode,\r\n                        product_name: resultBarcode[i].product_name,\r\n                        product_description: resultBarcode[i].product_description,\r\n                        product_image: resultBarcode[i].product_image,\r\n                        manufacturer_name: resultBarcode[i].manufacturer_name,\r\n                        estimatedProductPrice: Number(price.toFixed(2))\r\n                    }\r\n                    arrayProduct.push(p)\r\n                }\r\n                SetProduct(...product, arrayProduct)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else alert('מלא את השדות תחילה')\r\n\r\n\r\n    }\r\n    const ConfirmationLimit = (index) => {\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        let tempCheck = list.ListEstimatedPrice + product[index].estimatedProductPrice\r\n        console.log('temp', tempCheck)\r\n        console.log(list.ListEstimatedPrice, product[index].estimatedProductPrice)\r\n        if (tempCheck > list.LimitPrice) {\r\n            swal({\r\n                text: \"שים לב! חרגת מהמגבלה\",\r\n                buttons: ['בטל', 'המשך בכל זאת'],\r\n                dangerMode: true,\r\n            }).then((willContinue) => {\r\n                if (willContinue) {\r\n                    Add2DB(index)\r\n                }\r\n            })\r\n        } else if (tempCheck > list.LimitPrice * 0.7) {\r\n            alert('שים לב! עברת 70% מהמגבלה')\r\n            Add2DB(index)\r\n        }\r\n        else Add2DB(index)\r\n    }\r\n\r\n    const Add2DB = async (index) => {\r\n\r\n        let p = {\r\n            ...product[index],\r\n            ListID: list.ListID,\r\n            GroupID: list.GroupID\r\n        }\r\n        const resDB = await fetch(apiAppProduct, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }),\r\n            body: JSON.stringify(p)\r\n        })\r\n        const resultDB = await resDB.json()\r\n        console.log('result', resultDB)\r\n        list.ListEstimatedPrice += resultDB.estimatedProductPrice\r\n        SetProduct([])\r\n        SetProductCart([...productCart, resultDB])\r\n        alert('המוצר התווסף בהצלחה')\r\n    }\r\n\r\n    const getTotalPrice = async () => {\r\n        try {\r\n            //getCityID\r\n            data.GetCityByName.city_name = list.CityName\r\n            let query = queryString.stringifyUrl({ url: api, query: data.GetCityByName })\r\n            let resCity = await fetch(query, { method: 'GET' })\r\n            let resultCity = await resCity.json();\r\n            console.log('1')\r\n            //getStorebycityId\r\n            data.GetStoresByCityID.city_id = resultCity[0].city_id\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetStoresByCityID })\r\n            let resStoreID = await fetch(query, { method: 'GET' })\r\n            let resultStoreID = await resStoreID.json();\r\n            console.log('2')\r\n            let tempArrayStore = []\r\n\r\n            for (let i = 0; i < resultStoreID.length; i++) {\r\n                let p = 0;\r\n                let outOfStock = [];\r\n                for (let j = 0; j < productCart.length; j++) {\r\n                    data.GetPriceByProductBarCode.product_barcode = productCart[j].product_barcode\r\n                    data.GetPriceByProductBarCode.store_id = resultStoreID[i].store_id\r\n                    query = queryString.stringifyUrl({ url: \"https://cors-anywhere.herokuapp.com/\" + api, query: data.GetPriceByProductBarCode })\r\n                    const res = await fetch(query, { method: 'GET' })\r\n                    var result = await res.json()\r\n                    console.log('3')\r\n                    if (result.error_type === \"NO_DATA\") {\r\n                        alert('המוצר ' + productCart[j].product_name + ' לא קיים בחנות זו ')\r\n                        outOfStock.push(productCart[j])\r\n                        continue;\r\n\r\n                    }\r\n                    p += JSON.parse(result[0].store_product_price)\r\n                }\r\n                const s = {\r\n                    OutOfStock: outOfStock,\r\n                    Store: resultStoreID[i],\r\n                    TotalPrice: Number(p.toFixed(2))\r\n                }\r\n                tempArrayStore.push(s)\r\n            }\r\n            SetStores(tempArrayStore)\r\n            console.log('store', stores)\r\n            // history.push(`/ListSuperMarket`, { params:tempArrayStore })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const SearchSubstitute = async (indexS, indexO) => {\r\n        console.log(stores[indexS].OutOfStock[indexO])\r\n        let prodSubstitute = stores[indexS].OutOfStock[indexO];\r\n        data.GetProductsByName.product_name = prodSubstitute.product_description\r\n        let query = queryString.stringifyUrl({ url: api, query: data.GetProductsByName })\r\n        let resBarcode = await fetch(query, { method: 'GET' })\r\n        let resultBarcode = await resBarcode.json();\r\n        let tempArray = []\r\n        for (let i = 0; i < resultBarcode.length; i++) {\r\n            data.GetPriceByProductBarCode.store_id = stores[indexS].store_id\r\n            data.GetPriceByProductBarCode.product_barcode = resultBarcode[i].product_barcode\r\n            query = await queryString.stringifyUrl({ url: api, query: data.GetPriceByProductBarCode })\r\n            let resPrice = await fetch(query, { method: 'GET' })\r\n            let resultPrice = await resPrice.json();\r\n            console.log('a',resultPrice)\r\n            if (resultPrice.product_barcode === prodSubstitute.product_barcode) {\r\n                continue;\r\n            }\r\n            tempArray.push(resultPrice)\r\n        }\r\n        console.log(tempArray)\r\n        if (tempArray.length !== 0) {\r\n            SetProduct(tempArray)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    const DeleteProduct = (index, barcode, ListID) => {\r\n        console.log(productCart[index])\r\n        swal({\r\n            title: \"מחיקת פריט\",\r\n            text: \"כל פריטי הרשימה ימחקו גם הם \",\r\n            buttons: ['בטל', 'מחק'],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    fetch(apiAppProduct + barcode + '/' + ListID, {\r\n                        method: 'DELETE',\r\n                        headers: new Headers({\r\n                            'Content-type': 'application/json; charset=UTF-8'\r\n                        })\r\n                    }).then(res => { return res.json(); })\r\n                        .then(\r\n                            (result) => {\r\n                                console.log('The ', result, ' was successfully deleted!')\r\n                                list.ListEstimatedPrice -= productCart[index].estimatedProductPrice.toFixed(2)\r\n                                productCart.splice(index, 1)\r\n                                SetProductCart([...productCart])\r\n                                swal(\"המוצר נמחק \")\r\n                            },\r\n                            (error) => {\r\n                                console.log(error)\r\n                            })\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    onInput={editListName}\r\n                    placeholder={listName}\r\n                    onBlur={Confirmation}\r\n                    inputRef={textInput}\r\n                />\r\n            </div>\r\n            <div className=\"Maincontent\">\r\n                <h3>{list.CityName} </h3>\r\n                <input type={'text'} placeholder='הזן עיר חדשה' onChange={handleCity} /> &nbsp;\r\n                <button onClick={handleClickCity}>הגדר עיר לחיפוש </button>\r\n                <h3>{list.LimitPrice}</h3>\r\n                <input type={'number'} placeholder='הזן מגבלה חדשה' onChange={handleLimit}></input> &nbsp;\r\n                <button onClick={handleClickLimit}>הגדר מגבלה </button> <br /> <br /> <br /> <br />\r\n                <input type={'text'} placeholder='בחר מוצר ' onChange={handleProduct} /> &nbsp;\r\n                <button onClick={handleClickChoise}>חפש מוצר</button>\r\n                {console.log(list)}\r\n                <br />\r\n                <h2>מוצרים</h2>\r\n                {product.map((p, index) =>\r\n                    <div key={index}>\r\n                        <p>\r\n                            {p.product_name} <b> במחיר</b> {p.estimatedProductPrice} &nbsp;\r\n                                <button onClick={() => ConfirmationLimit(index)}>הוסף לרשימה</button>\r\n                        </p>\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <h2>הרשימה שלי </h2>\r\n                    {productCart.map((p, index) =>\r\n                        <div key={index}>\r\n                            <p>\r\n                                {p.product_name} <b> במחיר</b> {p.estimatedProductPrice} &nbsp;\r\n                            <button onClick={() => DeleteProduct(index, p.product_barcode, p.ListID)}>מחק מהרשימה</button>\r\n                            </p>\r\n                            {productCart.length - 1 === index ? 'מחיר משוער ' + Number(list.ListEstimatedPrice).toFixed(2) : false}\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n                <br />\r\n                <button onClick={getTotalPrice}>חפש סופרים בסביבתך</button> <br /><br />\r\n                <b><u>רשימת הסופרים</u></b>\r\n                {stores.map((s, indexS) =>\r\n                    <div key={indexS}>\r\n                        <div>\r\n                            <b>{s.Store.store_name}</b> ברחוב {s.Store.store_address} <b>:עלות סל הקניות הוא </b> {s.TotalPrice} <br />\r\n                            <u><small>המוצרים שחסרים הם</small></u>\r\n                            {s.OutOfStock.map((o, indexO) =>\r\n                                <p key={indexO}>\r\n                                    <span>{o.product_name},</span>\r\n                                    <button onClick={() => SearchSubstitute(indexS, indexO)} >חפש מוצר תחליפי</button>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"footer\">\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default withRouter(AList)\r\n","import React from 'react';\r\nimport { Switch, Route, withRouter, useHistory, useParams, Router } from 'react-router-dom';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\n//styles:\r\nimport './App.css';\r\n\r\n//Our Components:\r\nimport Navbar from './Components/Navbar';\r\n\r\n//pages: \r\nimport HomePage from './Pages/HomePage';\r\nimport AGroups from './Pages/AGroups';\r\nimport TempPage from './Pages/TempPage';\r\nimport AList from './Pages/AList';\r\n\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const { param } = useParams();\r\n  // \"homepage\": \"http://proj.ruppin.ac.il/bgroup5/FinalProject/frontEnd\"\r\n  return (\r\n    <div className=\"App\">\r\n\r\n\r\n\r\n      <Navbar id={param} />\r\n      <ArrowForwardIosIcon onClick={() => history.goBack()} style={{ fontSize: '1.5em', paddingLeft: '20px', float: 'right' }} />\r\n        <Switch>\r\n          <Route exact path=\"/HomePage/:id\" component={HomePage} />\r\n          <Route path=\"/TempPage/:id\" component={TempPage} />\r\n          <Route path=\"/AGroups/\" component={AGroups} />\r\n          <Route path=\"/AList/\" component={AList} />\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter} from 'react-router-dom'\r\n// import { HashRouter as Router} from 'react-router-dom';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <BrowserRouter  >\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}